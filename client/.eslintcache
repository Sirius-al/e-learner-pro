[{"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\App.js":"1","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\MainFormPart.js":"2","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\Modal.js":"3","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\addLessonsAndMaterials.js":"4","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\course\\Course.js":"5","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\addLearns.js":"6","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\Actions\\types.js":"7","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\course\\Faq.js":"8","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\ShowLearnsCards.js":"9","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\edc-compos\\Addmaterials.js":"10","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\courseCard.js":"11","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\Actions\\actions.js":"12","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\edc-compos\\Addlessons.js":"13","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\index.js":"14","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\Reducers\\index.js":"15","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\AddFaq.js":"16","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\utils\\alert.js":"17","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\Dumb Folder\\MainComp.js":"18","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\utils\\backendCall.js":"19","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\course\\Lessons.js":"20","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\Reducers\\allReducers.js":"21","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\Video_play\\Video_main.js":"22","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\Video_play\\Player.js":"23","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\EditCourse.js":"24","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\CourseDetailsEdit.js":"25","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\Dumb Folder\\main.js":"26","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\history.js":"27","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\mainformPart\\Category.js":"28","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\mainformPart\\DropZone.js":"29","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\utils\\category_listing.js":"30"},{"size":2423,"mtime":1611276821832,"results":"31","hashOfConfig":"32"},{"size":8312,"mtime":1611304670365,"results":"33","hashOfConfig":"32"},{"size":2017,"mtime":1611038139500,"results":"34","hashOfConfig":"32"},{"size":10225,"mtime":1611092786292,"results":"35","hashOfConfig":"32"},{"size":6882,"mtime":1611308184310,"results":"36","hashOfConfig":"32"},{"size":2235,"mtime":1610520377360,"results":"37","hashOfConfig":"32"},{"size":1136,"mtime":1611078055227,"results":"38","hashOfConfig":"32"},{"size":1384,"mtime":1610520377024,"results":"39","hashOfConfig":"32"},{"size":406,"mtime":1610520377359,"results":"40","hashOfConfig":"32"},{"size":6165,"mtime":1611303744647,"results":"41","hashOfConfig":"32"},{"size":1809,"mtime":1611088900134,"results":"42","hashOfConfig":"32"},{"size":12954,"mtime":1611088162073,"results":"43","hashOfConfig":"32"},{"size":4517,"mtime":1611303205350,"results":"44","hashOfConfig":"32"},{"size":700,"mtime":1611390175916,"results":"45","hashOfConfig":"32"},{"size":146,"mtime":1610520377020,"results":"46","hashOfConfig":"32"},{"size":1852,"mtime":1610520377359,"results":"47","hashOfConfig":"32"},{"size":889,"mtime":1610520377363,"results":"48","hashOfConfig":"32"},{"size":4623,"mtime":1610520377021,"results":"49","hashOfConfig":"32"},{"size":163,"mtime":1611390145700,"results":"50","hashOfConfig":"32"},{"size":4090,"mtime":1611092346991,"results":"51","hashOfConfig":"32"},{"size":2378,"mtime":1611088210298,"results":"52","hashOfConfig":"32"},{"size":5201,"mtime":1611091752202,"results":"53","hashOfConfig":"32"},{"size":773,"mtime":1611054849171,"results":"54","hashOfConfig":"32"},{"size":7038,"mtime":1611092978468,"results":"55","hashOfConfig":"32"},{"size":6343,"mtime":1611086495160,"results":"56","hashOfConfig":"32"},{"size":3464,"mtime":1610520377022,"results":"57","hashOfConfig":"32"},{"size":98,"mtime":1610520377362,"results":"58","hashOfConfig":"32"},{"size":16468,"mtime":1611275954720,"results":"59","hashOfConfig":"32"},{"size":1302,"mtime":1611303378742,"results":"60","hashOfConfig":"32"},{"size":7054,"mtime":1611388822559,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s9z4g7",{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"77"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"67"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"67"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"67"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"67"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\App.js",[],"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\MainFormPart.js",["143","144","145","146"],"import React, { Fragment, useState } from 'react'\r\nimport './courseformpart.css'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport _ from 'lodash'\r\nimport history from '../history';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\n\r\nimport Category from './mainformPart/Category'\r\n\r\nimport { submitCourseBasics, uploadCoverImage, SetAlert } from '../Actions/actions'\r\n\r\n\r\nconst MainFormPart = ({ submitCourseBasics, uploadCoverImage, files, SetAlert }) => {\r\n\r\n  // console.log(_. isEmpty(files))\r\n\r\n  const [title, settitle] = useState('')\r\n  const [catagory, setcatagory] = useState({})\r\n  const [description, setdescription] = useState('')\r\n  const [duration, setduration] = useState('')\r\n  const [teacher, setteacher] = useState('')\r\n  const [coverImage, setcoverImage] = useState('')\r\n  const [coverImageData, setcoverImageData] = useState({})\r\n  const [level, setlevel] = useState('')\r\n  const [requirements, setrequirements] = useState('')\r\n  const [price, setprice] = useState(0)\r\n  const [discountPerc, setdiscountPerc] = useState(0)\r\n  const [uploading, setuploading] = useState(false)\r\n\r\n  \r\n\r\n\r\n  const submition2 = (file = {}) => {\r\n    let data\r\n         data = {\r\n          title: title,\r\n          catagory: catagory,\r\n          description: description,\r\n          duration: duration,\r\n          teacher: teacher,\r\n          coverImage: file,\r\n          level: level,\r\n          requirements: requirements,\r\n          price: price,\r\n          discountPerc: discountPerc\r\n        }\r\n        \r\n      submitCourseBasics(data)\r\n      // console.log(data)\r\n  \r\n      setTimeout(() => {\r\n        \r\n        settitle(''); setcatagory({}); setdescription(''); setduration(''); setteacher(''); setcoverImage(''); setcoverImageData({}); setlevel(''); setrequirements(''); setprice(0); setdiscountPerc(0);\r\n        \r\n        setuploading(false)\r\n      }, 1000)\r\n  }\r\n\r\n\r\n\r\n  const submitBasicForm = async (e) => {\r\n    e.preventDefault()\r\n    setuploading(true)\r\n\r\n\r\n    return submition2(files)\r\n\r\n  }\r\n\r\n  const LevelOptions = [\r\n    { value: 'Beginners', label: 'Beginners' },\r\n    { value: 'Intermediate', label: 'Intermediate' },\r\n    { value: 'Advanced', label: 'Advanced' }\r\n  ]\r\n\r\n\r\n\r\n  const handleChange2 = (newValue, actionMeta) => {\r\n    setlevel(newValue.value);\r\n  };\r\n\r\n  const onCoverImageUpload = async (e) => {\r\n    let imgurl;\r\n    const file = e.target.files[0];\r\n\r\n    [...e.target.files].map(f => setcoverImageData(f))\r\n\r\n    var reader = new FileReader();\r\n    var url = reader.readAsDataURL(file);\r\n\r\n    reader.onloadend = function (e) {\r\n      imgurl = reader.result\r\n      setcoverImage(imgurl)\r\n    }\r\n\r\n    const formdata = new FormData()\r\n    formdata.append('coverImage', file)\r\n    await uploadCoverImage(formdata)\r\n    \r\n  };\r\n\r\n    return (\r\n        <Fragment>\r\n          <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"inputEmail4\">Course Title</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Put your course's Title\" name='title' value={title} onChange={e => settitle(e.target.value)} />\r\n          </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-3\" style={{marginTop: '30px', textAlign: 'center'}}>\r\n            <input\r\n                accept=\"image/*\"\r\n                id=\"contained-button-file\"\r\n                type=\"file\"\r\n                style={{display: 'none'}}\r\n                name=\"coverImage\"\r\n                onChange={e => onCoverImageUpload(e)}\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                  <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                      Upload Cover Image\r\n                  </Button>\r\n              </label>\r\n          </div>\r\n          <div className=\"form-group col-md-9\" style={{marginTop: '30px'}}>\r\n            {coverImage === '' ? (<p> <strong>Select a Cover Image For your Course</strong></p>) : (\r\n              <div className=\"card bg-dark text-white\">\r\n                <img src={coverImage} className=\"card-img\" alt=\"...\" />\r\n                <div className=\"cover-Image-overlay card-img-overlay\">\r\n                  <h5 className=\"cover-Image-title card-title text-white text-center\">{coverImageData.name}</h5>\r\n                </div>\r\n              </div>\r\n\r\n            )}\r\n            \r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-12\">\r\n            <label htmlFor=\"Catagory\">Course Catagory</label>\r\n            <Category id=\"Catagory\" sendProps={obj => setcatagory(obj)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-3\">\r\n            <label htmlFor=\"inputAddress\">Teacher</label>\r\n            <input type=\"text\" className=\"form-control\" name='teacher'  id=\"inputAddress\" placeholder=\"Ex: Nafiz Al din\" value={teacher} onChange={e => setteacher(e.target.value)} />\r\n          </div>\r\n          <div className=\"form-group col-md-2\">\r\n            <label htmlFor=\"inputState\">course Price</label>\r\n            <input type=\"number\" name=\"price\"  className=\"form-control\" id=\"inputState\" placeholder=\"course's Price\" value={price} onChange={e => setprice(e.target.value)} />\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"inputZip\">course duration</label>\r\n            <input type=\"text\" name=\"duration\" value={duration}  className=\"form-control\" id=\"inputZip\" placeholder=\"3 hrs - 45 mins\" onChange={e => setduration(e.target.value)} />\r\n          </div>\r\n\r\n          <div className=\"form-group col-md-3\">\r\n            <label htmlFor=\"level\">Level of expertise</label>\r\n            <Select id=\"level\"\r\n              // defaultValue={colourOptions[2]}\r\n              placeholder=\"Course's Skill set requirement\"\r\n              options={LevelOptions}\r\n              defaultInputValue={''}\r\n              onChange={handleChange2}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"Descriptioninput\">Course Description</label>\r\n            <textarea type=\"text\" className=\"form-control\" name='description'  row='10' id=\"Descriptioninput\" placeholder=\"Ex: Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur\" value={description} onChange={e => setdescription(e.target.value)} />\r\n         </div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"Descriptioninput\">Course Requirements</label>\r\n            <textarea type=\"text\" className=\"form-control\" name='description'  row='3' id=\"Descriptioninput\" placeholder=\"Put course Requirements seperated by commas,\" value={requirements} onChange={e => setrequirements(e.target.value)} />\r\n         </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"inputZip\">Course Discount</label>\r\n            <input type=\"number\" name='discountPerc' value={discountPerc} className=\"form-control\" id=\"inputZip\" placeholder=\"will be calculated in percentage\" onChange={e => setdiscountPerc(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-12\">\r\n\r\n          {uploading ? <Button style={{width: '200px', height: '50px'}} className=\"btn btn-primary mb-4\" variant=\"contained\" disabled color=\"secondary\" startIcon={<CircularProgress />}> uploading </Button> : <button className=\"btn btn-primary mb-4\" onClick={e=> submitBasicForm(e)}>submit this form ^</button> }\r\n          \r\n          \r\n          </div>\r\n        </div>\r\n      </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    course: state.datas.course,\r\n    files: state.datas.data\r\n  })\r\n\r\nexport default connect(mapStateToProps, { submitCourseBasics, uploadCoverImage, SetAlert })(MainFormPart)\r\n",["147","148"],"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\Modal.js",["149"],"import React, { Fragment, useState } from 'react'\r\nimport { createPortal } from 'react-dom'\r\nimport ReactPlayer from 'react-player/lazy'\r\nimport { useParams } from 'react-router-dom'\r\nimport history from '../history'\r\n\r\n\r\nconst Modal = () => {\r\n\r\n  const {filepath, filename} = useParams()\r\n  \r\n  \r\n    return createPortal(\r\n      <Fragment>\r\n        <div\r\n          className=\"modal fade bd-example-modal-lg\"\r\n          onClick={() => history.goBack()}\r\n          tabIndex={-1}\r\n          role=\"dialog\"\r\n          aria-labelledby=\"myLargeModalLabel\"\r\n          aria-hidden=\"true\">\r\n\r\n          <div onClick={e => e.stopPropagation()} style={{width: \"100%\"}} className=\"modal-dialog modal-dialog-centered modal-lg\">\r\n\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\r\n                  {filename ? filename : \" The file doesn't exist \"}\r\n                </h5>\r\n                \r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                  onClick={() => history.goBack()}\r\n                  >\r\n                  <span aria-hidden=\"true\">×</span>\r\n                </button>\r\n                \r\n              </div>\r\n\r\n              <div className=\"modal-body\" >\r\n                \r\n                  <div style={{height: \"300px\", width: '768px', display: 'block', position: 'relative' }}>\r\n                  <ReactPlayer \r\n                    width='768px' \r\n                    height='300px' \r\n                    controls \r\n                    style={{backgroundColor: 'rgba(0, 0, 0, 0.8)'}} \r\n                    url={filepath}\r\n                    playing={true} />\r\n                  </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </Fragment>,\r\n      document.querySelector(\"#modal\")\r\n    );\r\n}\r\n\r\nexport default Modal\r\n","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\addLessonsAndMaterials.js",["150"],"import React, { Fragment, useEffect } from 'react'\r\n\r\nimport Addlessons from './edc-compos/Addlessons';\r\nimport Addmaterials from './edc-compos/Addmaterials';\r\nimport { getCourse, deleteCourseFile, deleteLessonFile } from '../../Actions/actions';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Link, useParams } from \"react-router-dom\"\r\n\r\n\r\nconst AddLessonsAndMaterials = ({ getCourse, course, deleteCourseFile, deleteLessonFile }) => {\r\n    \r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        getCourse(id)\r\n    }, [getCourse])\r\n\r\n\r\n    //! >>>>>>>>>>>>>>>>>>>>>>> Functions\r\n    //! >>>>>>>>>>>>>>>>>>>>>>> Functions\r\n    //! >>>>>>>>>>>>>>>>>>>>>>> Functions\r\n    function onCourseFileCross(file, id) {\r\n\r\n        deleteCourseFile(file, id)\r\n    }\r\n\r\n    function onLessonFileCross(file, id) {\r\n\r\n        // console.log(file, id)\r\n        deleteLessonFile(file, id)\r\n    }\r\n\r\n    function onFolderDelete(material_files, course_id) {\r\n\r\n        let i = 0;\r\n        console.log(material_files, course_id)\r\n        \r\n        function myLoop() {\r\n                    console.log(\"material_files => \", material_files)\r\n                \r\n                    setTimeout( async () => {\r\n                console.log(\"THE FILE IT_SELF => \", material_files.courseFile[i]);\r\n                \r\n                const res = await deleteCourseFile(material_files.courseFile[i], course_id, material_files.courseFile[i])\r\n                \r\n                i++;\r\n                //* keep deleting files one after another\r\n                if (i < material_files.courseFile.length && res) { //  && res.status === 200 || res.status === 304\r\n                    myLoop();\r\n                }\r\n            }, 1000)\r\n\r\n        }\r\n        \r\n        myLoop();\r\n    }\r\n    function onFolderDelete2(lesson_files, course_id) {\r\n        \r\n        let i = 0;\r\n        console.log(lesson_files, course_id)\r\n            \r\n        function myLoop() {\r\n                console.log(\"lesson_files => \", lesson_files)\r\n                \r\n                setTimeout( async () => {\r\n                console.log(\"THE FILE IT_SELF => \", lesson_files.lessonFile[i]);\r\n                \r\n                const res = await deleteLessonFile(lesson_files.lessonFile[i], course_id, lesson_files.lessonFile[i])\r\n                \r\n                i++;\r\n                //* keep deleting files one after another\r\n                if (i < lesson_files.lessonFile.length && res) { //  && res.status === 200 || res.status === 304\r\n                    myLoop();\r\n                }\r\n            }, 1000)\r\n\r\n        }\r\n        \r\n        myLoop();\r\n    }\r\n\r\n\r\n\r\n\r\n    const { _id, lessons, courseMaterials, duration } = course;\r\n\r\n\r\n    //! ============================== Component return Statement =====================================\r\n    //! ============================== Component return Statement =====================================\r\n    //! ============================== Component return Statement =====================================\r\n    return (\r\n        <Fragment>\r\n            <Addmaterials id={id} />\r\n            <Addlessons id={id} />\r\n            <hr/>\r\n\r\n            <Fragment>\r\n                <div className=\"intro_title\">\r\n                    <h2>Course Materials</h2>\r\n                    <ul>\r\n                        <li>{courseMaterials && courseMaterials.length} Course Materials</li>\r\n                    </ul>\r\n                </div>\r\n                <div id=\"accordion_lessons\" role=\"tablist\" className=\"add_bottom_45\">\r\n\r\n                    {courseMaterials && (<div className=\"card\">\r\n                            <div className=\"card-header\" role=\"tab\" id=\"headingOne\">\r\n                            <h4 className=\"mb-0\">\r\n                                <a\r\n                                data-toggle=\"collapse\"\r\n                                href={`#collapseOne`}\r\n                                aria-expanded=\"false\"\r\n                                aria-controls={`collapseOne`}\r\n                                >\r\n                                <i className=\"indicator ti-plus text-secondary\" /> COURSE MATERIALS\r\n                                </a>\r\n                            </h4>\r\n                            </div>\r\n                            <div\r\n                            id={`collapseOne`}\r\n                            className=\"collapse show\"\r\n                            role=\"tabpanel\"\r\n                            aria-labelledby=\"headingOne\"\r\n                            data-parent=\"#accordion_lessons\"\r\n                            > \r\n                            <div className=\"card-body\">\r\n                                <div className=\"list_lessons\">\r\n                                <ul>\r\n                                    {courseMaterials.map((mat, i) => (\r\n                                        <li key={i}>\r\n                                            <div style={{marginBottom: '10px'}}>\r\n                                                <p className=\"mb-1 col-11 d-inline-block\"><strong><u>{mat.courseFileTitle ? mat.courseFileTitle : \"No material title found\"}</u></strong></p>\r\n                                                <button type=\"button\" className=\"col-1 close\">\r\n                                                    <span onClick={() => onFolderDelete(mat, _id)} style={{width: '30px', color: 'darkred', fontSize: '30px'}}>&times;</span>\r\n                                                </button>\r\n                                            </div>\r\n\r\n                                            {mat.courseFile && mat.courseFile.map((file, i) => (\r\n                                                <Fragment key={i}>\r\n                                                    <a target=\"blank\" href={file.Location} className=\"col-9 txt_doc d-inline-block mb-2\">\r\n                                                        {`${i+1}. ${file.originalName}`}\r\n                                                    </a>\r\n                                                    <button key={i+file.originalName} type=\"button\" className=\"col-1 close\">\r\n                                                        <span onClick={() => onCourseFileCross(file, _id)} style={{width: '30px'}}>&times;</span>\r\n                                                    </button>\r\n                                                </Fragment>\r\n                                            ))}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>)}\r\n                        <hr/>\r\n                        <br/>\r\n\r\n                        <div className=\"intro_title\">\r\n                            <h2>Lessons</h2>\r\n                            <ul>\r\n                            <li>{lessons && lessons.length} lessons</li>\r\n                            <li>{duration}</li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                    {lessons && <Fragment>\r\n                        {lessons.map((lesson, i) => (\r\n\r\n\r\n                            <div className=\"card\" key={i}>\r\n                            <div className=\"card-header\" role=\"tab\" id=\"headingOne\">\r\n                            <h5 className=\"mb-0 col-10 d-inline-block\">\r\n                                <a\r\n                                data-toggle=\"collapse\"\r\n                                href={`#collapseOne${i}`}\r\n                                aria-expanded=\"false\"\r\n                                aria-controls={`collapseOne${i}`}\r\n                                >\r\n                                <i className=\"indicator ti-plus\" /> {lesson?.lessonTitle}\r\n                                </a>\r\n                            </h5>\r\n                            <button type=\"button\" className=\"col-1 close\">\r\n                                <span onClick={() => onFolderDelete2(lesson, _id)} style={{width: '30px', color: 'darkred', fontSize: '30px'}}>&times;</span>\r\n                            </button>\r\n                            </div>\r\n                            <div\r\n                            id={`collapseOne${i}`}\r\n                            className=\"collapse show\"\r\n                            role=\"tabpanel\"\r\n                            aria-labelledby=\"headingOne\"\r\n                            data-parent=\"#accordion_lessons\"\r\n                            > \r\n                            <div className=\"card-body\">\r\n                                <div className=\"list_lessons\">\r\n                                <ul>\r\n                                    { lesson.lessonFile && !lesson.lessonFile.length > 0 ? \"No Lessons Created Yet\" : lesson.lessonFile.map((file, i) => (\r\n                                        <li key={i}>\r\n                                            <Link to={`/view-lesson/${_id}/${file.originalName}`} className=\"col-11 video\" >\r\n                                                { file.originalName }\r\n                                            </Link>\r\n                                            <button type=\"button\" className=\"col-1 close\">\r\n                                                <span onClick={() => onLessonFileCross(file, _id)} style={{width: '30px'}}>&times;</span>\r\n                                            </button>\r\n                                        </li>\r\n                                        \r\n                                    ))}\r\n                                    \r\n                                </ul>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        ))}\r\n                        </Fragment>}\r\n                        \r\n                    {/* /card */}\r\n                </div>\r\n                {/* /accordion */}\r\n                </Fragment>\r\n                \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    course: state.datas.course\r\n})\r\n\r\nexport default connect(mapStateToProps, { getCourse, deleteCourseFile, deleteLessonFile })(AddLessonsAndMaterials)\r\n","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\course\\Course.js",["151","152","153","154"],"import React, { Fragment, useEffect } from 'react'\r\n// import \"./css/bootstrap.min.css\";\r\nimport \"./css/style.css\";\r\nimport \"./css/vendors.css\";\r\nimport \"./css/icon_fonts/css/all_icons.min.css\";\r\nimport \"./css/custom.css\";\r\n\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { getCourse } from '../../Actions/actions'\r\nimport Lessons from './Lessons'\r\nimport Faq from './Faq';\r\n\r\n\r\nconst Course = ({ getCourse, course }) => {\r\n\r\n  const { id } = useParams()\r\n\r\n  useEffect(() => {\r\n    getCourse(id)\r\n  }, [])\r\n\r\n  const { _id, title, teacher, description, discountPerc, requirements, duration, coverImage, level, price, learns, courseMaterials, lessons, faq, catagory} = course\r\n\r\n    return (\r\n      <main>\r\n        <section id=\"hero_in\" className=\"courses\">\r\n          <div className=\"wrapper\">\r\n            <div className=\"container\">\r\n              <h1 className=\"fadeInUp\">\r\n                <span />\r\n                {title}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/*/hero_in*/}\r\n        <div className=\"bg_color_1\">\r\n          <nav className=\"secondary_nav sticky_horizontal\">\r\n            <div className=\"container\">\r\n              <ul className=\"clearfix\">\r\n                <li>\r\n                  <a href=\"#description\" className=\"active\">\r\n                    Description\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#lessons\">Lessons</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n          <div className=\"container margin_60_35\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-8\">\r\n                <section id=\"description\">\r\n                  <h2>Description</h2>\r\n                  <p>\r\n                    {description}\r\n                  </p>\r\n\r\n                  {learns && <Fragment>\r\n                    <h5>What will you learn</h5>\r\n                    <ul className=\"list_ok\">\r\n                      {learns.map((learn, i) => {\r\n                        return (<li key={i}>\r\n                          <h6><strong>{learn.learnTitle}</strong></h6>\r\n                          <p>\r\n                          {learn.learnDescription}\r\n                          </p>\r\n                        </li>)\r\n                      })}\r\n                    </ul>\r\n                  </Fragment>}\r\n\r\n                  <hr />\r\n                  {requirements && <Fragment>\r\n                    <p>Requirements</p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-12\">\r\n                        <ul className=\"bullets\">\r\n                          {requirements.map((req, i) => {\r\n                            return <li key={i}>{req}</li>\r\n                          })}\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                    </Fragment>}\r\n\r\n                  {/* /row */}\r\n                </section>\r\n                {/* /section */}\r\n                <section id=\"lessons\">\r\n                  <Lessons _id={_id} duration={duration} courseMaterials={courseMaterials} lessons={lessons}/>\r\n                </section>\r\n                <h4><strong>Teacher</strong></h4>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-12\">\r\n                        <ul className=\"bullets\">\r\n                          <li><h5>{teacher}</h5></li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n              </div>\r\n              \r\n              {/* box details */}\r\n              <aside className=\"col-lg-4\" id=\"sidebar\">\r\n                <div className=\"box_detail\">\r\n                  <figure>\r\n                    <a\r\n                      target=\"blank\"\r\n                      href=\"#!\"\r\n                      className=\"video\" \r\n                    >\r\n                      <i className=\"arrow_triangle-right\" />\r\n                      <img\r\n                        src=\"http://via.placeholder.com/800x533/ccc/fff/course_1.jpg\"\r\n                        className=\"img-fluid\"\r\n                      />\r\n                      <span>View course preview</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"price\">\r\n                    ${price}\r\n                    <span className=\"original_price\">\r\n                      <em> </em>{discountPerc && discountPerc > 0 ? `${discountPerc}% discount price` : ''}\r\n                    </span>\r\n                  </div>\r\n                  <a href=\"#0\" className=\"btn_1 full-width\">\r\n                    Enroll Now\r\n                  </a>\r\n                  <a href=\"#0\" className=\"btn_1 full-width outline\">\r\n                    <i className=\"icon_heart\" /> Add to wishlist\r\n                  </a>\r\n                  <div id=\"list_feat\">\r\n                    <h3>What's includes</h3>\r\n                    <ul>\r\n                      <li>\r\n                        <i className=\"icon_mobile\" />\r\n                        Mobile support\r\n                      </li>\r\n                      <li>\r\n                        <i className=\"icon_archive_alt\" />\r\n                        Lesson archive\r\n                      </li>\r\n                      <li>\r\n                        <i className=\"icon_mobile\" />\r\n                        Mobile support\r\n                      </li>\r\n                      <li>\r\n                        <i className=\"icon_chat_alt\" />\r\n                        Tutor chat\r\n                      </li>\r\n                      <li>\r\n                        <i className=\"icon_document_alt\" />\r\n                        Course certificate\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </aside>\r\n              \r\n            </div>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-lg-8\">\r\n                <h4 className='mb-4'><strong>F.A.Q</strong></h4>\r\n                    {faq && faq.length > 0 ? faq.map((item, i) => <Faq faq={item} key={i} i={i} />) : \"No Faq\"}\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-lg-12 text-center\">\r\n                <h4 className='mb-4'><strong>Tags</strong></h4>\r\n                    {catagory && catagory.tags ? catagory.tags.map((item, i) => <h5 className=\"d-inline ml-2\">\r\n                      <span class=\"badge badge-dark\">{item}</span></h5>) : \"No Tags Yet\"}\r\n                </div>\r\n            </div>\r\n            {/* /row */}\r\n          </div>\r\n          {/* /container */}\r\n        </div>\r\n        {/* /bg_color_1 */}\r\n      </main>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  course: state.datas.course\r\n})\r\n\r\nexport default connect(mapStateToProps, { getCourse })(Course)\r\n",["155","156"],"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\addLearns.js",["157"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport { submitCourseLearn, getCourse } from '../../Actions/actions'\r\nimport ShowLearnsCards from \"./ShowLearnsCards\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst AddLearns = ({ submitCourseLearn, getCourse, learns }) => {\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        getCourse(id)\r\n    }, [])\r\n\r\n    const [value, setvalue] = useState({learnTitle: '', learnDescription: ''})\r\n    \r\n    const inputtedData = e => {\r\n        setvalue({...value, [e.target.name]: e.target.value})\r\n    }\r\n    \r\n    const sendData = () => {\r\n        // console.log(value)\r\n        submitCourseLearn(id, [value])\r\n        console.log(id, [value])\r\n        setvalue({learnTitle: '', learnDescription: ''})\r\n    }\r\n   \r\n  return (\r\n    <div>\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-header\">Course Learing's Section </div>\r\n        <div className=\"card-body\">\r\n            <input type=\"text\" name=\"learnTitle\" className=\"form-control\" id=\"inputZip\" placeholder=\"(Title) Ex: Journey of JavaScript\" value={value.question} onChange={e => inputtedData(e)}\r\n            />\r\n            <br/>\r\n            <textarea type=\"text\" name=\"learnDescription\" className=\"form-control\" row={3} id=\"inputZip\" placeholder=\"(Description) Ex: In September 1995, a Netscape programmer named Brandan Eich developed a new scripting language in just 10 days. It was originally named Mocha, but quickly became known as LiveScript and, later, JavaScript.\" value={value.answer} onChange={e => inputtedData(e)}\r\n            />\r\n            \r\n        </div>\r\n            <Button variant=\"contained\" onClick={() => sendData()} color=\"secondary\" component=\"span\">\r\n                submit course Learn\r\n            </Button>\r\n      </div>\r\n        <br/><br/><br/>\r\n\r\n        {learns && learns.map((learn, i) => {\r\n            return <ShowLearnsCards key={i} learn={learn} />\r\n\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    learns: state.datas.course.learns\r\n})\r\n\r\nexport default connect(mapStateToProps, { submitCourseLearn, getCourse })(AddLearns);\r\n","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\Actions\\types.js",[],"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\course\\Faq.js",["158"],"import React, { useState } from \"react\";\r\nimport './css/bootstrap.min.css'\r\n\r\nconst Faq = ({ i, faq }) => {\r\n\r\n\r\n  return (\r\n    <div className=\"accordion accordion-flush\">\r\n      <div className=\"card\" >\r\n                <div className=\"card-header\" role=\"tab\" id=\"headingOne\">\r\n                  <h4 className=\"mb-0\">\r\n                    <a\r\n                      data-toggle=\"collapse\"\r\n                      href={`#collapseTwo${i}`}\r\n                      aria-expanded=\"false\"\r\n                      aria-controls={`collapseTwo${i}`}\r\n                    >\r\n                      <i class=\"far fa-question-circle\"></i> {faq.question}\r\n                    </a>\r\n                  </h4>\r\n                </div>\r\n                <div\r\n                  id={`collapseTwo${i}`}\r\n                  className=\"collapse show\"\r\n                  role=\"tabpanel\"\r\n                  aria-labelledby=\"headingOne\"\r\n                  data-parent=\"#accordion_lessons\"\r\n                > \r\n                  <div className=\"card-body\">\r\n                    <div className=\"list_lessons\">\r\n                      <ul>\r\n                        <li>\r\n                            {faq.answer}\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Faq;\r\n","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\ShowLearnsCards.js",[],["159","160"],"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\edc-compos\\Addmaterials.js",[],"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\courseCard.js",["161"],"import { Link } from 'react-router-dom';\r\nimport React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './courseCard.css'\r\n\r\n\r\n\r\nconst courseCard = ({ course }) => {\r\n\r\n    const { _id, title, description, teacher, coverImage, duration, level, price, discountPerc } = course\r\n\r\n      // console.log(coverImage)\r\n\r\n\r\n    return (\r\n      <div className='courseCards col-sm-4'>\r\n        <div className=\"card mb-3\" style={{width: '30vw'}}>\r\n          <img src={ coverImage === {} ? 'https://picsum.photos/200/300/?blur' : `${coverImage?.Location}` } style={{height: '20vh'}} className=\"card-img-top\" alt={title} />\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{title}</h5>\r\n            <p className=\"card-text\">\r\n                {description}\r\n            </p>\r\n            <p className=\"card-text\">\r\n              <small className=\"text-muted\"><strong>Teacher:</strong> {teacher}</small>\r\n              <small className=\"text-muted ml-4\"><strong>Duration:</strong> {duration}</small>\r\n            </p>\r\n            <p className=\"card-text\">\r\n            </p>\r\n            <blockquote className=\"blockquote\">\r\n                <footer className=\"blockquote-footer\">Course Difficulty <cite title=\"Source Title\"><strong>{`\" ${level} \"`}</strong></cite></footer>\r\n            </blockquote>\r\n          <Link to={`/view-course/${_id}`} className=\"btn btn-secondary mr-3\">View Course</Link>\r\n          <a href=\"#!\" className=\"btn btn-success\"> <strong>Enroll Now ${price}</strong></a>\r\n          </div>\r\n          <Link to={`/dumb`} className=\"btn btn-secondary mx-5 mb-3\">Certification</Link>\r\n          <Link to={`edit-course/${_id}`} className=\"btn btn-info\">Edit Course</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default connect(null, {  })(courseCard)\r\n","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\Actions\\actions.js",["162","163","164"],"import { FILE_UPLOADER, COURSE_BASIC_UPLOADED, GET_ALL_COURSES, COURSE_MATERIAL_UPLOADED, COURSE_LESSONS_UPLOADED, COURSE_FAQ_UPLOADED, GET_COURSE, COURSE_LEARN_UPLOADED, LESSON_VIDEO_UPLOADER, LESSON_ERROR, PROGRESS, PROGRESS2, MATERIAL_FILE_UPLOADER, SET_ALERT, REMOVE_ALERT, CERIFICATE_IMAGE_UPLOADED, COURSEFILE_DELETED, GET_COURSE_LESSONS, LESSONFILE_DELETED, COURSE_UPDATED, COURSE_UPDATED_ERROR } from './types'\r\nimport backendCall from '../utils/backendCall'\r\nimport { v4 } from 'uuid'\r\nimport axios from 'axios'\r\n\r\nexport const SetAlert = (type, message, timeout=3000) => async dispatch => {\r\n    const id = v4();\r\n\r\n    dispatch({ type: SET_ALERT, payload: {id, type, message} })\r\n\r\n    setTimeout(() => {\r\n        dispatch({ type: REMOVE_ALERT, payload: id})\r\n    }, timeout)\r\n  }\r\n\r\n\r\nexport const uploadfile = (file) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.post('/upload', file, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        })\r\n        dispatch({ type: FILE_UPLOADER, payload: res.data })\r\n        dispatch(SetAlert('success', \"Image Uploaded !\"))\r\n        console.log(res.data)\r\n    } catch (err) {\r\n        dispatch(SetAlert('danger', \"Image Uploading failed, PLease Try again !\"))\r\n        const error = err.response\r\n        console.error(error)\r\n        // dispatch({\r\n        //   type: PROFILE_ERROR,\r\n        //   payload: { msg: error.data.message, status: error.status }\r\n        // })\r\n        \r\n    }\r\n  }\r\n\r\nexport const uploadCoverImage = (file) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.post('/upload/coverimage', file, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        }) \r\n        dispatch({ type: FILE_UPLOADER, payload: res.data.file })\r\n        dispatch(SetAlert('success', \"Cover Image Uploaded !\"))\r\n        console.log(res.data)\r\n    } catch (err) {\r\n        dispatch(SetAlert('danger', \"Image Uploading failed, PLease Try again !\"))\r\n        const error = err.response\r\n        console.error(error)\r\n        // dispatch({\r\n        //   type: PROFILE_ERROR,\r\n        //   payload: { msg: error.data.message, status: error.status }\r\n        // })\r\n        \r\n    }\r\n  }\r\n\r\nexport const uploadCertificateImage = (file) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.post('/upload/certificate-image', file, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        })\r\n        dispatch({ type: CERIFICATE_IMAGE_UPLOADED, payload: res.data })\r\n        dispatch(SetAlert('success', \"Certificate Image Uploaded !\"))\r\n        console.log(res.data)\r\n    } catch (err) {\r\n        dispatch(SetAlert('danger', \"Certificate Image Uploading failed, PLease Try again !\"))\r\n        const error = err.response\r\n        console.error(error)\r\n        // dispatch({\r\n        //   type: PROFILE_ERROR,\r\n        //   payload: { msg: error.data.message, status: error.status }\r\n        // })\r\n        \r\n    }\r\n  }\r\nexport const uploadMaterialfiles = (file, ) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.post('/upload/materials', file, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            },\r\n            onUploadProgress: (progressEvent) => {\r\n                let progress = parseInt(Math.round((progressEvent.loaded * 100) / progressEvent.total))\r\n                \r\n                if (progress === 100) {\r\n                    setTimeout(() => {\r\n                        dispatch(fileUploadProgress(0, PROGRESS2))\r\n                    }, 2000)\r\n                }\r\n\r\n                dispatch(fileUploadProgress(progress, PROGRESS2))\r\n            }\r\n        })\r\n        dispatch({ type: MATERIAL_FILE_UPLOADER, payload: res.data })\r\n        dispatch(SetAlert('info', \"Course Material File Uploaded\"))\r\n        console.log(res.data)\r\n        return res.data\r\n    } catch (err) {\r\n        const error = err.response\r\n        dispatch(SetAlert('Error', \"Course Material File uploading Failed ! PLease try again\"))\r\n        console.error(error)\r\n        \r\n    }\r\n  }\r\nexport let fileUploadProgress = (value, prog_type) => async dispatch => {\r\n    const type = prog_type\r\n    dispatch({ type, payload: value })\r\n    // console.log(value)\r\n};\r\n\r\n\r\nexport const uploadlessonsVideos = (file) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.post('/upload/lessons', file, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            },\r\n            onUploadProgress: (progressEvent) => {\r\n                let progress = parseInt(Math.round((progressEvent.loaded * 100) / progressEvent.total))\r\n                \r\n                if (progress === 100) {\r\n                    setTimeout(() => {\r\n                        dispatch(fileUploadProgress(0, PROGRESS))\r\n                    }, 2000)\r\n                }\r\n\r\n                dispatch(fileUploadProgress(progress, PROGRESS))\r\n            }\r\n        })\r\n        dispatch({ type: LESSON_VIDEO_UPLOADER, payload: res.data.file })\r\n        dispatch(SetAlert('success', \"Lesson's Video Uploaded !\"))\r\n        console.log(res.data)\r\n        return res.data\r\n    } catch (err) {\r\n        dispatch({ type: LESSON_ERROR })\r\n        dispatch(SetAlert('Error', \"lesson's video uploading failed ! PLease try again\"))\r\n        // const error = err.response\r\n        console.error(err)\r\n        \r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const deleteCourseFile = (fileDoc, courseId, material_files_id) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.post('/delete/course-file', { fileDoc, id: courseId, mat_id: material_files_id} )\r\n        \r\n        dispatch({ type: COURSEFILE_DELETED, payload: res.data.course })\r\n        dispatch(SetAlert('success', \"File SuccessFully deleted\"))\r\n        console.log(res.data)\r\n        return res.data\r\n    } catch (err) {\r\n        dispatch({ type: LESSON_ERROR })\r\n        dispatch(SetAlert('Error', \"Course's File Deletion failed ! PLease try again\"))\r\n        // const error = err.response\r\n        console.error(err)\r\n            \r\n    }\r\n}\r\n\r\n\r\nexport const updateCourse = (docs, id) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.patch(`/course/edit/${id}`, docs )\r\n        \r\n        dispatch({ type: COURSE_UPDATED, payload: res.data.course })\r\n        dispatch(SetAlert('success', \"Course SuccessFully Updated !\"))\r\n        console.log(res.data)\r\n        return res.data\r\n    } catch (err) {\r\n        dispatch({ type: COURSE_UPDATED_ERROR, payload: err.response})\r\n        dispatch(SetAlert('Error', \"Course's Update failed ! PLease try again !\"))\r\n        // const error = err.response\r\n        console.error(err)\r\n    }\r\n}\r\n\r\n\r\nexport const deleteLessonFile = (fileDoc, courseId, lesson_files_id) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.post('/delete/lesson-file', { fileDoc, id: courseId, les_id: lesson_files_id} )\r\n        \r\n        dispatch({ type: LESSONFILE_DELETED, payload: res.data.course })\r\n        dispatch(SetAlert('success', \"File SuccessFully deleted\"))\r\n        console.log(res.data)\r\n        return res.data\r\n    } catch (err) {\r\n        dispatch({ type: LESSON_ERROR })\r\n        dispatch(SetAlert('Error', \"lesson's File Deletion failed ! PLease try again\"))\r\n        // const error = err.response\r\n        console.error(err)\r\n            \r\n    }\r\n}\r\n\r\n\r\nexport const getCourseLessonsByCourseId = (id) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.get(`/course/course-lesson/${id}`)\r\n        \r\n        dispatch({ type: GET_COURSE_LESSONS, payload: res.data.lessons })\r\n        // console.log(res.data)\r\n        return res.data\r\n    } catch (err) {\r\n        dispatch({ type: LESSON_ERROR })\r\n        dispatch(SetAlert('Error', \"something is going wrong. Please try refreshing the page !\"))\r\n        // const error = err.response\r\n        console.error(err)\r\n            \r\n    }\r\n}\r\n\r\nexport const submitCourseBasics = (data) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.post('/course', data, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        dispatch({ type: COURSE_BASIC_UPLOADED, payload: res.data })\r\n        dispatch(SetAlert('success', 'New Course Created !'))\r\n        dispatch(getAllCourses())\r\n        // console.log(res.data)\r\n  \r\n    } catch (err) {\r\n        const error = err.response\r\n        console.error(error)\r\n        // dispatch({\r\n        //   type: PROFILE_ERROR,\r\n        //   payload: { msg: error.data.message, status: error.status }\r\n        // })\r\n        \r\n    }\r\n  }\r\n\r\nexport const submitCourseMaterial = (id, data) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.patch(`/course/course-materials/${id}`, data, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        dispatch({ type: COURSE_MATERIAL_UPLOADED, payload: res.data })\r\n        dispatch(SetAlert('success', \"course materials submitted successfully\"))\r\n        dispatch(getCourse(id))\r\n        // console.log(res.data)\r\n        \r\n    } catch (err) {\r\n        const error = err.response\r\n        dispatch(SetAlert('error', \"course materials submisson failed Please refresh the page\"))\r\n        console.error(error)\r\n        // dispatch({\r\n            //   type: PROFILE_ERROR,\r\n        //   payload: { msg: error.data.message, status: error.status }\r\n        // })\r\n        \r\n    }\r\n  }\r\n  \r\n  \r\n  export const submitCourseLessons = (id, data) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.patch(`/course/course-lessons/${id}`, data, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        dispatch({ type: COURSE_LESSONS_UPLOADED, payload: res.data })\r\n        dispatch(SetAlert('success', \"course lessons submitted successfully\"))\r\n        dispatch(getCourse(id))\r\n        // console.log(res.data)\r\n        \r\n    } catch (err) {\r\n        const error = err.response\r\n        dispatch(SetAlert('error', \"course lessons submisson failed Please refresh the page\"))\r\n        console.error(error)\r\n        // dispatch({\r\n        //   type: PROFILE_ERROR,\r\n        //   payload: { msg: error.data.message, status: error.status }\r\n        // })\r\n        \r\n    }\r\n}\r\n\r\nexport const submitCoursefaq = (id, data) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.patch(`course/course-faq/${id}`, data, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        dispatch(getCourse(id))\r\n        dispatch(SetAlert('success', \"faqs submitted successfully\"))\r\n        // console.log(res.data)\r\n        \r\n    } catch (err) {\r\n        const error = err.response\r\n        dispatch(SetAlert('danger', \"course faqs submisson failed Please refresh the page\"))\r\n        console.error(error)\r\n        // dispatch({\r\n        //   type: PROFILE_ERROR,\r\n        //   payload: { msg: error.data.message, status: error.status }\r\n        // })\r\n        \r\n    }\r\n  }\r\n\r\nexport const submitCourseLearn = (id, data) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.patch(`course/course-learn/${id}`, data, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }) \r\n        dispatch({ type: COURSE_LEARN_UPLOADED, payload: res.data })\r\n        dispatch(SetAlert('success', \"course learns submitted successfully !\"))\r\n        dispatch(getCourse(id))\r\n        // console.log(res.data)\r\n  \r\n    } catch (err) {\r\n        const error = err.response\r\n        console.error(error)\r\n        // dispatch({\r\n        //   type: PROFILE_ERROR,\r\n        //   payload: { msg: error.data.message, status: error.status }\r\n        // })\r\n        \r\n    }\r\n  }\r\n\r\n\r\nexport const getCourse = (id) => async dispatch => {\r\n    try {\r\n        const res = await backendCall.get(`course/${id}`)\r\n        dispatch({ type: GET_COURSE, payload: res.data })\r\n        // console.log(res.data)\r\n  \r\n    } catch (err) {\r\n        const error = err.response\r\n        console.error(error)\r\n        // dispatch({\r\n        //   type: PROFILE_ERROR,\r\n        //   payload: { msg: error.data.message, status: error.status }\r\n        // })\r\n        \r\n    }\r\n  }\r\n\r\n\r\nexport const getAllCourses = () => async dispatch => {\r\n    try {\r\n        const res = await backendCall.get('/courses')\r\n        dispatch({ type: GET_ALL_COURSES, payload: res.data})\r\n        // console.log(res.data)\r\n  \r\n    } catch (err) {\r\n        const error = err.response\r\n        console.error(error)\r\n        // dispatch({\r\n        //   type: PROFILE_ERROR,\r\n        //   payload: { msg: error.data.message, status: error.status }\r\n        // })\r\n        \r\n    }\r\n  }","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\edc-compos\\Addlessons.js",[],"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\index.js",["165"],"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\Reducers\\index.js",[],["166","167"],"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\AddFaq.js",["168"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { submitCoursefaq, getCourse } from '../../Actions/actions'\r\nimport Faq from '../course/Faq';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\nconst AddFaq = ({ getCourse, submitCoursefaq, course: { faq } }) => {\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n      getCourse(id)\r\n    }, [])\r\n\r\n\r\n    const [value, setvalue] = useState({question: '', answer: ''})\r\n    \r\n    const inputtedData = e => {\r\n        setvalue({...value, [e.target.name]: e.target.value})\r\n    }\r\n    \r\n    const sendData = () => {\r\n        console.log(value)\r\n        submitCoursefaq(id, [value])\r\n        setvalue({question: '', answer: ''})\r\n    }\r\n   \r\n  return (\r\n    <div>\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-header\">Course FAQ </div>\r\n        <div className=\"card-body\">\r\n            <input type=\"text\" name=\"question\" className=\"form-control\" id=\"inputZip\" placeholder=\"Question \" value={value.question} onChange={e => inputtedData(e)}\r\n            />\r\n            <br/>\r\n            <textarea type=\"text\" name=\"answer\" className=\"form-control\" row={3} id=\"inputZip\" placeholder=\"Answer\" value={value.answer} onChange={e => inputtedData(e)}\r\n            />\r\n            \r\n        </div>\r\n            <Button variant=\"contained\" onClick={() => sendData()} color=\"secondary\" component=\"span\">\r\n                submit course Faq\r\n            </Button>\r\n      </div>\r\n      <br/>\r\n      {faq && faq.length > 0 ? faq.map(faq => <Faq faq={faq} />) : \"No Faq(s) found, Create one ^\"}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  course: state.datas.course\r\n})\r\n\r\nexport default connect(mapStateToProps, { submitCoursefaq, getCourse })(AddFaq);\r\n","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\utils\\alert.js",["169","170"],"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\Dumb Folder\\MainComp.js",["171","172","173"],"import React, { Fragment } from \"react\";\r\nimport moment from 'moment'\r\nimport './certificatestyle.css';\r\n\r\nconst Docs = ({ name, course, image }) => {\r\n\r\n\r\n  return (\r\n    <div className=\"certificate-container\" style={{ background: \"#f9f9f9\" }}>\r\n      <table\r\n        id=\"certificate\"\r\n        style={{\r\n          width: \"11in\",\r\n          margin: \"0 auto\",\r\n          textAlign: \"center\",\r\n          padding: 10,\r\n          borderStyle: \"groove\",\r\n          borderWidth: 20,\r\n          outline: \"5px dotted #000\",\r\n          height: \"8.5in\",\r\n          outlineOffset: \"-26px\",\r\n          outlineStyle: \"double\",\r\n          borderColor: \"#9d8b00\",\r\n        }}\r\n      >\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <h1 style={{ fontSize: \"0.6in\", margin: 0, color: \"#000\", marginBottom: \"10px\" }}>\r\n                Course Completion Certificate\r\n              </h1>\r\n              <h3\r\n                style={{\r\n                  margin: 0,\r\n                  fontSize: \"0.25in\",\r\n                  color: \"black\",\r\n                  textTransform: \"uppercase\",\r\n                  fontFamily: \"sans-serif\",\r\n                }}\r\n              >\r\n                Is hereby granted to :\r\n              </h3>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <h2\r\n                style={{\r\n                  color: \"#fff\",\r\n                  fontSize: \"30px\",\r\n                  margin: \"10px 0 30px 0\",\r\n                  fontFamily: \"sans-serif\",\r\n                  textTransform: \"uppercase\",\r\n                }}\r\n              >\r\n                { name ? name : '[ Name ]' }\r\n              </h2>\r\n              <h2\r\n                style={{\r\n                  color: \"#fff\",\r\n                  fontSize: \"20px\",\r\n                  margin: \"10px 0 20px 0\",\r\n                  fontFamily: \"sans-serif\",\r\n                  textTransform: \"capitalize\",\r\n                  color:'#494000',\r\n                  padding: \"0px 79px\",\r\n                  lineHeight: '1.5'\r\n                }}\r\n              >\r\n                This certificate is awarded to { <strong> <u> { name ? name : '[ Name ]' } </u> </strong> } for having successfully completing { <strong> <u> { course ? course : '[ course ]' } </u> </strong> } at Sirius_al's Institute\r\n              </h2>\r\n              <h2\r\n                style={{\r\n                  color: \"#fff\",\r\n                  fontSize: \"20px\",\r\n                  margin: \"10px 0 0 0\",\r\n                  fontFamily: \"sans-serif\",\r\n                  textTransform: \"capitalize\",\r\n                  color:'#000'\r\n                }}\r\n              >\r\n                CONGRATULATIONS! KEEP IT UP! \r\n              </h2>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <img\r\n                src={image ? `/${image}` : '/FILES/demoImage.png'}\r\n                alt=\"demoImage\"\r\n                style={{\r\n                  maxWidth: \"130px\",\r\n                  margin: \"0 auto\",\r\n                  display: \"block\",\r\n                  borderWidth: 5,\r\n                  borderStyle: \"double\",\r\n                  borderColor: \"#333\",\r\n                  boxShadow: \"0 5px 10px rgba(0,0,0,0.3)\",\r\n                }}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <h4\r\n                style={{\r\n                  margin: 0,\r\n                  fontSize: \"0.16in\",\r\n                  fontFamily: \"sans-serif\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                \r\n              </h4>\r\n              <h5\r\n                style={{\r\n                  margin: \"5px 0 40px\",\r\n                  fontSize: \"0.16in\",\r\n                  fontFamily: \"sans-serif\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                \r\n              </h5>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <img\r\n                src=\"/FILES/demoLogo.png\"\r\n                alt=\"demoLogo\"\r\n                style={{ maxWidth: \"100px\" }}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <h6\r\n                style={{\r\n                  margin: \"10px 0 20px\",\r\n                  fontFamily: \"sans-serif\",\r\n                  fontSize: \"0.12in\",\r\n                }}\r\n              >\r\n                Reg. by Sirius_al\r\n              </h6>\r\n              <em>Awarded at : {moment().format('MMMM Do YYYY, h:mm:ss a')}</em>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Docs;","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\utils\\backendCall.js",[],"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\course\\Lessons.js",["174"],"import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from '../Modal'\r\n\r\nconst Lessons = ({ _id, duration, courseMaterials, lessons }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"intro_title\">\r\n        <h2>Lessons</h2>\r\n        <ul>\r\n          <li>{lessons && lessons.length} lessons</li>\r\n          <li>{duration}</li>\r\n        </ul>\r\n      </div>\r\n      <div id=\"accordion_lessons\" role=\"tablist\" className=\"add_bottom_45\">\r\n\r\n        {courseMaterials && (<div className=\"card\">\r\n                <div className=\"card-header\" role=\"tab\" id=\"headingOne\">\r\n                  <h4 className=\"mb-0\">\r\n                    <a\r\n                      data-toggle=\"collapse\"\r\n                      href={`#collapseOne`}\r\n                      aria-expanded=\"false\"\r\n                      aria-controls={`collapseOne`}\r\n                    >\r\n                      <i className=\"indicator ti-plus text-secondary\" /> COURSE MATERIALS\r\n                    </a>\r\n                  </h4>\r\n                </div>\r\n                <div\r\n                  id={`collapseOne`}\r\n                  className=\"collapse show\"\r\n                  role=\"tabpanel\"\r\n                  aria-labelledby=\"headingOne\"\r\n                  data-parent=\"#accordion_lessons\"\r\n                > \r\n                  <div className=\"card-body\">\r\n                    <div className=\"list_lessons\">\r\n                      <ul>\r\n                      {courseMaterials.map((mat, i) => (\r\n                          <li key={i}>\r\n                              <p className=\"mb-1\"><strong><u>{mat.courseFileTitle ? mat.courseFileTitle : \"No material title found\"}</u></strong></p>\r\n                              {mat.courseFile && mat.courseFile.map((file, i) => (\r\n                              <a key={i} href={file.Location} target=\"blank\" className=\"txt_doc d-block mb-2\">\r\n                                  {`${i+1}. ${file.originalName}`}\r\n                              </a>))}\r\n                              \r\n                          </li>\r\n                      ))}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>)}\r\n              <hr/>\r\n              <br/>\r\n\r\n        {lessons && <Fragment>\r\n            {lessons.map((lesson, i) => (\r\n\r\n\r\n                <div className=\"card\" key={i}>\r\n                <div className=\"card-header\" role=\"tab\" id=\"headingOne\">\r\n                  <h5 className=\"mb-0\">\r\n                    <a\r\n                      data-toggle=\"collapse\"\r\n                      href={`#collapseOne${i}`}\r\n                      aria-expanded=\"false\"\r\n                      aria-controls={`collapseOne${i}`}\r\n                    >\r\n                      <i className=\"indicator ti-plus\" /> {lesson.lessonTitle ? `${i+1}. ${lesson.lessonTitle}` : 'No lesson\\'s title'}\r\n                    </a>\r\n                  </h5>\r\n                </div>\r\n                <div\r\n                  id={`collapseOne${i}`}\r\n                  className=\"collapse show\"\r\n                  role=\"tabpanel\"\r\n                  aria-labelledby=\"headingOne\"\r\n                  data-parent=\"#accordion_lessons\"\r\n                > \r\n                  <div className=\"card-body\">\r\n                    <div className=\"list_lessons\">\r\n                      <ul>\r\n                      { lesson.lessonFile && lesson.lessonFile.length > 0 && lesson.lessonFile.map((file, i) => (\r\n                            <li key={i}>\r\n                                <Link to={`/view-lesson/${_id}/${file.originalName}`} className=\"video\" >\r\n                                    { file.originalName }\r\n                                </Link>\r\n                            </li>\r\n                          ))}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            </Fragment>}\r\n            \r\n        {/* /card */}\r\n      </div>\r\n      {/* /accordion */}\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Lessons;\r\n","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\Reducers\\allReducers.js",["175"],"import { FILE_UPLOADER, COURSE_BASIC_UPLOADED, GET_ALL_COURSES, GET_COURSE, LESSON_VIDEO_UPLOADER, PROGRESS, PROGRESS2, MATERIAL_FILE_UPLOADER, SET_ALERT, REMOVE_ALERT, CERIFICATE_IMAGE_UPLOADED, COURSE_LESSONS_UPLOADED, COURSE_MATERIAL_UPLOADED, COURSEFILE_DELETED, GET_COURSE_LESSONS, LESSONFILE_DELETED, COURSE_UPDATED } from '../Actions/types'\r\n\r\nconst INITIAL_STATE = {\r\n    alert: [],\r\n    data: {},\r\n    certificateImg: {},\r\n    specific_lessons: [],\r\n    material_files: [],\r\n    videoUploadingProgress: 0,\r\n    materialsUploadingProgress: 0,\r\n    lessonFiles: [],\r\n    course: {},\r\n    courses: []\r\n}\r\n\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return {...state, alert: [...state.alert, payload]};\r\n        case REMOVE_ALERT:\r\n            return {...state, alert: state.alert.filter(alert => alert.id !== payload)};\r\n        case FILE_UPLOADER:\r\n            return {...state, data: payload};\r\n        case CERIFICATE_IMAGE_UPLOADED:\r\n            return {...state, certificateImg: payload};\r\n        case MATERIAL_FILE_UPLOADER:\r\n            return {...state, material_files: [...state.material_files, payload]};\r\n        case COURSE_MATERIAL_UPLOADED:\r\n            return {...state, material_files: []};\r\n        case PROGRESS:\r\n            return {...state, videoUploadingProgress: payload};\r\n        case PROGRESS2:\r\n            return {...state, materialsUploadingProgress: payload};\r\n        case LESSON_VIDEO_UPLOADER:\r\n            return {...state, lessonFiles: [...state.lessonFiles, payload]};\r\n        case COURSE_LESSONS_UPLOADED:\r\n            return {...state, lessonFiles: []};\r\n        case COURSE_BASIC_UPLOADED:\r\n            return {...state, course: payload.course};\r\n        case GET_COURSE:\r\n            return {...state, course: payload.course};\r\n        case GET_ALL_COURSES:\r\n            return {...state, courses: payload.course};\r\n        case COURSEFILE_DELETED:\r\n            return {...state, course: payload};\r\n        case LESSONFILE_DELETED:\r\n            return {...state, course: payload};\r\n        case GET_COURSE_LESSONS:\r\n            return {...state, specific_lessons: [...payload]};\r\n        case COURSE_UPDATED:\r\n            return {...state, course: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\Video_play\\Video_main.js",["176","177"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from \"react-router-dom\"\r\nimport { getCourseLessonsByCourseId } from '../../Actions/actions';\r\nimport ReactPlayer from 'react-player/lazy'\r\n\r\nconst Video_main = ({ getCourseLessonsByCourseId, lessons }) => {\r\n\r\n    const { courseId, videoId } = useParams()\r\n    \r\n    const [url, seturl] = useState('')\r\n    \r\n    // if (videoId && lessons) {\r\n    //   lessons.map((lesson, i) => {\r\n    //     const theTargated = lesson.lessonFile.filter(file => file.originalName === videoId)\r\n    //     console.log(theTargated)\r\n    //     if (theTargated.length !== 0) {\r\n    //         seturl(theTargated[0].Location)\r\n    //     }\r\n    //   })\r\n    // }\r\n    \r\n\r\n    useEffect(() => {\r\n        getCourseLessonsByCourseId(courseId)\r\n    }, []);\r\n\r\n    //!======================================== static functions\r\n    function changeUrl(e, file) {\r\n        e.stopPropagation()\r\n\r\n        seturl(file.Location)\r\n        // console.log(`file.Location =>  ${file.Location}`)\r\n    }\r\n\r\n\r\n    //!======================================== Main component return Statement\r\n    //!======================================== Main component return Statement\r\n    //!======================================== Main component return Statement\r\n    return (\r\n        <div className=\"container-fluid\" >\r\n            <div className=\"row mx-5\">\r\n                <div className=\"col-md-8 text-center\" style={{position: 'relative'}}>\r\n                    <h1>Video Player</h1>\r\n                    <hr/>\r\n                    <br/>\r\n\r\n                <ReactPlayer \r\n                    width='59vw' \r\n                    height='60vh' \r\n                    controls \r\n                    style={{position: 'absolute', backgroundColor: 'rgba(0, 0, 0, 0.6)'}} \r\n                    url={url}\r\n                    playing={true} />\r\n                </div>\r\n                <div className=\"col-md-4 text-center\">\r\n                    \r\n                    <h1>List Of course Videos</h1>\r\n                    <hr/>\r\n                    <br/>\r\n                    \r\n                <div className=\"list-group\">\r\n                    {lessons && lessons.map((lesson, i) => {\r\n                        return (\r\n                            // <a href=\"#!\" className=\"list-group-item list-group-item-action flex-column align-items-start text-center\">\r\n                            //     <div className=\"d-flex w-100 justify-content-between\">\r\n                            //         <h5 className=\"mb-1\">{lesson.lessonTitle}</h5>\r\n                            //         {/* <small>3 days ago</small> */}\r\n                            //     </div>\r\n                            //     <p className=\"mb-1\">Some Description about the lesson</p>\r\n                            // </a>\r\n\r\n                            <div id=\"accordion\" key={i}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" id={`headingOne${i}`} style={{border: '2px solid rgb(184, 3, 133)', backgroundColor: 'rgba(165, 165, 165, 0.905)'}}>\r\n                                    \r\n                                <h5 className=\"mb-0\">\r\n                                    <button className=\"btn btn-link\" data-toggle=\"collapse\" data-target={`#collapse${i}`} aria-expanded=\"true\" aria-controls={`collapse${i}`}>\r\n                                    <h4>{lesson.lessonTitle}</h4>\r\n                                    </button>\r\n                                </h5>\r\n                                </div>\r\n                                <div id={`collapse${i}`} className=\"collapse show\" aria-labelledby={`headingOne${i}`} data-parent=\"#accordion\">\r\n\r\n                                    {lesson && !lesson.lessonFile.length > 0 ? \"No Lesson Videos Yet !\" : lesson.lessonFile.map((file, i) => (\r\n                                        <div className=\"card-body\" key={i}>\r\n                                        <a href=\"#!\" className=\"list-group-item list-group-item-action flex-column align-items-start text-center\" \r\n                                         onClick={(e)=> changeUrl(e, file)} >\r\n                                            <div className=\"d-flex w-100 justify-content-between\">\r\n                                                <h5 className=\"mb-1\">{file.originalName}</h5>\r\n                                                {/* <small>3 days ago</small> */}\r\n                                            </div>\r\n                                            <p className=\"mb-1\">Some Description about the lesson</p>\r\n                                        </a>\r\n                                    </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n\r\n\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lessons: state.datas.specific_lessons\r\n})\r\n\r\nexport default connect(mapStateToProps, { getCourseLessonsByCourseId })(Video_main)\r\n","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\Video_play\\Player.js",["178"],"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\EditCourse.js",["179","180","181","182"],"import React, { Fragment, useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getCourse } from '../../Actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport Lessons from '../course/Lessons';\r\nimport Faq from '../course/Faq';\r\n\r\nconst EditCourse = ({ getCourse, course }) => {\r\n    const { id } = useParams()\r\n    \r\n    useEffect(() => {\r\n        getCourse(id)\r\n    }, [])\r\n\r\n    const { title, teacher, description, discountPerc, requirements, duration, coverImage, level, price, learns, courseMaterials, lessons, faq } = course\r\n    \r\n    return (\r\n        <main>\r\n        <section id=\"hero_in\" className=\"courses\">\r\n          <div className=\"wrapper\">\r\n            <div className=\"container\">\r\n              <h1 className=\"fadeInUp\">\r\n                <span />\r\n                {title ? title : \"No title\"}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/*/hero_in*/}\r\n        <div className=\"bg_color_1\">\r\n          <nav className=\"secondary_nav sticky_horizontal\">\r\n            <div className=\"container\">\r\n              <ul className=\"clearfix\">\r\n                <li>\r\n                  <a href=\"#description\" className=\"active\">\r\n                    Description\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#lessons\">Lessons</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n          <Link to={`/edit-course-details/${id}`} className=\"btn btn-info mt-2\">Edit course Details</Link>\r\n          <div className=\"container margin_60_35\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-8\">\r\n                <section id=\"description\">\r\n                  <h2>Description</h2>\r\n                  <p>\r\n                    {!description ? \"No description found for this course\" : description}\r\n                  </p>\r\n\r\n                <h5>What will students learn from this course !</h5>\r\n                  {learns && <Fragment>\r\n                    <ul className=\"list_ok\">\r\n                      {learns.length > 0 ? learns.map((learn, i) => {\r\n                        return (<li key={i}>\r\n                          <h6 style={{fontWeight: 'bold'}}>{learn.learnTitle}</h6>\r\n                          <p>\r\n                          {learn.learnDescription}\r\n                          </p>\r\n                        </li>)\r\n                      }) : \"Nothing to Learn\"}\r\n                    </ul>\r\n\r\n                  </Fragment>}\r\n                  <Link to={`/add-learns/${id}`} className=\"btn btn-info\">Add what students will learn</Link>\r\n\r\n                  <hr />\r\n                    <p>Requirements</p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-12\">\r\n                        <ul className=\"bullets\">\r\n                          {requirements && requirements.length > 0 ? requirements.map((req, i) => {\r\n                            return <li key={i}>{req}</li>}) : <li> No Requirements </li>}\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    \r\n                  {/* /row */}\r\n                </section>\r\n                {/* /section */}\r\n                <section id=\"lessons\">\r\n                    <Lessons _id={id} duration={duration} courseMaterials={courseMaterials} lessons={lessons}/>\r\n                    <Link to={`/add-lessons/${id}`} className=\"btn btn-info mb-3\" style={{width: '40%'}}>Add Lessons and Course materials</Link>\r\n                </section>\r\n                <h4><strong>Teacher</strong></h4>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-12\">\r\n                        <ul className=\"bullets\">\r\n                          <li><h5>{teacher ? teacher : \"No teacher\"}</h5></li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n              </div>\r\n              \r\n              {/* box details */}\r\n              <aside className=\"col-lg-4\" id=\"sidebar\">\r\n                <div className=\"box_detail\">\r\n                  <figure>\r\n                    <a\r\n                      href=\"https://www.youtube.com/watch?v=LDgd_gUcqCw\"\r\n                      className=\"video\"\r\n                    >\r\n                      <i className=\"arrow_triangle-right\" />\r\n                      <img\r\n                        src=\"http://via.placeholder.com/800x533/ccc/fff/course_1.jpg\"\r\n                        className=\"img-fluid\"\r\n                      />\r\n                      <span>View course preview</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"price\">\r\n                    ${price ? price : 0}\r\n                    <span className=\"original_price\">\r\n                      <em> </em>{discountPerc && discountPerc > 0 ? `${discountPerc}% discount price` : ''}\r\n                    </span>\r\n                  </div>\r\n                  <a href=\"#0\" className=\"btn_1 full-width\">\r\n                    Enroll Now\r\n                  </a>\r\n                  <a href=\"#0\" className=\"btn_1 full-width outline\">\r\n                    <i className=\"icon_heart\" /> Add to wishlist\r\n                  </a>\r\n                  <div id=\"list_feat\">\r\n                    <h3>What's includes</h3>\r\n                    <ul>\r\n                      <li>\r\n                        <i className=\"icon_mobile\" />\r\n                        Mobile support\r\n                      </li>\r\n                      <li>\r\n                        <i className=\"icon_archive_alt\" />\r\n                        Lesson archive\r\n                      </li>\r\n                      <li>\r\n                        <i className=\"icon_mobile\" />\r\n                        Mobile support\r\n                      </li>\r\n                      <li>\r\n                        <i className=\"icon_chat_alt\" />\r\n                        Tutor chat\r\n                      </li>\r\n                      <li>\r\n                        <i className=\"icon_document_alt\" />\r\n                        Course certificate\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </aside>\r\n              \r\n            \r\n            </div>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-lg-8\">\r\n                <h4 className='mb-4'><strong>F.A.Q</strong></h4>\r\n                    {faq && faq.length > 0 ? faq.map((item, i) => <Faq faq={item} key={i} i={i} />) : \"No Faq\"}\r\n                    <Link to={`/add-faq/${id}`} className=\"btn btn-info\" style={{width: '40%', display: 'block'}}>Add Faq</Link>\r\n                </div>\r\n            </div>\r\n            {/* /row */}\r\n          </div>\r\n          {/* /container */}\r\n        </div>\r\n        {/* /bg_color_1 */}\r\n      </main>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    course: state.datas.course\r\n})\r\n\r\nexport default connect(mapStateToProps, { getCourse })(EditCourse)\r\n","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\edit-course\\CourseDetailsEdit.js",["183","184"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport {  SetAlert, updateCourse, getCourse } from '../../Actions/actions'\r\nimport history from '../../history';\r\n\r\n\r\nimport Select from 'react-select';\r\n// import CreatableSelect from 'react-select/creatable';\r\n\r\n\r\n\r\n\r\nconst CourseDetailsEdit = ({ updateCourse, getCourse, course }) => {\r\n\r\n    const { id } = useParams()\r\n    const [formData, setformData] = useState({\r\n        title: '', \r\n        teacher: '', \r\n        description: '', \r\n        discountPerc: '', \r\n        requirements: '', \r\n        duration: '', \r\n        coverImage: '', \r\n        level: '', \r\n        price: '', \r\n    })\r\n\r\n    useEffect(() => {\r\n        getCourse(id)\r\n\r\n        setformData({\r\n            title: !course || !course.title ? '' : course.title,\r\n            teacher: !course || !course.teacher ? '' : course.teacher,\r\n            description: !course || !course.description ? '' : course.description,\r\n            discountPerc: !course || !course.discountPerc ? '' : course.discountPerc,\r\n            requirements: !course || !course.requirements ? '' : course.requirements,\r\n            duration: !course || !course.duration ? '' : course.duration,\r\n            // coverImage: !course || !course.coverImage ? '' : course.coverImage,\r\n            level: !course || !course.level ? '' : course.level,\r\n            price: !course || !course.price ? '' : course.price\r\n        })\r\n    }, [getCourse, updateCourse])\r\n\r\n    const { title, teacher, description, discountPerc, requirements, duration, level, price } = formData;\r\n\r\n\r\n\r\n\r\n    //! ======================================= Important functions\r\n\r\n\r\n    const onFormSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const res = await updateCourse(formData, id)\r\n\r\n        if (res) {\r\n            history.goBack()\r\n        }\r\n    }\r\n\r\n    const onFieldChange = (e) => {\r\n        return setformData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleChange2 = (newValue, actionMeta) => {\r\n        setformData({ ...formData, level: newValue.value })\r\n      };\r\n\r\n    const onRequirementValue = (e) => {\r\n        const arrayed = e.target.value.split(', ')\r\n        // console.log(arrayed)\r\n        return setformData({ ...formData, [e.target.name]: arrayed })\r\n    }\r\n\r\n  \r\n    \r\n    //? ====================================== Default VALUES\r\n      const LevelOptions = [\r\n        { value: 'Beginners', label: 'Beginners' },\r\n        { value: 'Intermediate', label: 'Intermediate' },\r\n        { value: 'Advanced', label: 'Advanced' }\r\n      ]\r\n\r\n\r\n\r\n    return (\r\n\r\n        <form onSubmit={onFormSubmit}>\r\n        \r\n            <h1 className=\"text-center\"><strong>Update Course</strong></h1>\r\n            <hr/>\r\n            <br/>\r\n            \r\n        \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"inputEmail4\">Course Title</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Put your course's Title\" name='title' value={title} onChange={e=> onFieldChange(e)} />\r\n          </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-3\">\r\n            <label htmlFor=\"inputAddress\">Teacher</label>\r\n            <input type=\"text\" className=\"form-control\" name='teacher'  id=\"inputAddress\" placeholder=\"Ex: Nafiz Al din\" value={teacher} onChange={e=> onFieldChange(e)} />\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-2\">\r\n            <label htmlFor=\"inputState\">course Price</label>\r\n            <input type=\"number\" name=\"price\"  className=\"form-control\" id=\"inputState\" placeholder=\"course's Price\" value={price} onChange={e=> onFieldChange(e)} />\r\n          </div>\r\n          <div className=\"form-group col-md-2\">\r\n            <label htmlFor=\"inputZip\">course duration</label>\r\n            <input type=\"text\" name=\"duration\"  className=\"form-control\" id=\"inputZip\" placeholder=\"3 hrs - 45 mins\" value={duration} onChange={e=> onFieldChange(e)} />\r\n          </div>\r\n\r\n          <div className=\"form-group col-md-5\">\r\n            <label htmlFor=\"level\">Level of expertise</label>\r\n            <Select id=\"level\"\r\n              placeholder={level &&  level !== '' ? `DEFAULT = ${level}` : 'Level of Expertise'}\r\n              options={LevelOptions}\r\n              defaultInputValue={''}\r\n              onChange={handleChange2}\r\n              onChange={e=> console.log()}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"Descriptioninput\">Course Description</label>\r\n            <textarea type=\"text\" className=\"form-control\" name='description'  row='10' id=\"Descriptioninput\" placeholder=\"Ex: Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur\" value={description} onChange={e=> onFieldChange(e)} />\r\n         </div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"Descriptioninput\">Course Requirements</label>\r\n            <textarea type=\"text\" className=\"form-control\" name='requirements'  row='3' id=\"Descriptioninput\" placeholder=\"Put course Requirements seperated by commas,\" value={requirements && requirements.join(', ')} onChange={e=> onRequirementValue(e)} />\r\n         </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"inputZip\">Course Discount</label>\r\n            <input type=\"number\" name='discountPerc' className=\"form-control\" id=\"inputZip\" placeholder=\"will be calculated in percentage\" value={discountPerc} onChange={e=> onFieldChange(e)}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n            <button type=\"submit\" className=\"btn btn-primary mb-4 text-center\"> Update </button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    course: state.datas.course\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateCourse, getCourse, SetAlert } )(CourseDetailsEdit)\r\n","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\Dumb Folder\\main.js",[],"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\history.js",[],"C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\mainformPart\\Category.js",["185","186","187","188"],"import React, { useRef, useState, Fragment } from 'react'\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport CreatableSelect from 'react-select/creatable';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n\r\nimport Select from 'react-select';\r\n\r\nconst Category = ({ sendProps }) => {\r\n\r\n    //? ============================== States ============================\r\n    //? ============================== States ============================\r\n\r\n    const prevButton = useRef()\r\n\r\n    const [activeStep, setactiveStep] = useState(0)\r\n\r\n    const [Category, setCategory] = useState('')\r\n    const [SubCategory, setSubCategory] = useState('')\r\n    const [Tags, setTags] = useState([])\r\n    const [HideButton, setHideButton] = useState(false)\r\n    const [Disabled, setDisabled] = useState(false)\r\n    const [canGoPrev, setcanGoPrev] = useState(false)\r\n\r\n\r\n    //? ============================== Default variables ============================\r\n    //? ============================== Default variables ============================\r\n    \r\n    const allowedNumOfTags = 5\r\n\r\n    const categoryOptions = [\r\n        { value: 'it & software', label: 'It & Software' },\r\n        { value: 'development', label: 'Development' },\r\n        { value: 'marketing', label: 'Marketing' }\r\n    ]\r\n\r\n    const subCategoryOptions = (category) => {\r\n        switch (category) {\r\n            case 'development':\r\n                return [\r\n                    { value: 'web development', label: 'web development' },\r\n                    { value: 'data science', label: 'Data Science' },\r\n                    { value: 'Mobile Development', label: 'Mobile Development' }\r\n                ]; \r\n            case 'it & software':\r\n                return [\r\n                    { value: 'network & security', label: 'Network & Security' },\r\n                    { value: 'hardware', label: 'Hardware' },\r\n                    { value: 'operating system', label: 'Operating System' }\r\n                ]; \r\n            case 'marketing':\r\n                return [\r\n                    { value: 'digital marketing', label: 'digital marketing' },\r\n                    { value: 'Facebook Marketing', label: 'Facebook Marketing' },\r\n                    { value: 'content marketing', label: 'content marketing' }\r\n                ]; \r\n            case '': \r\n                return [ { value: '', label: 'Nothing found !' } ];\r\n        }\r\n    }\r\n\r\n\r\n    const tagsOptions = (subCategory) => {\r\n        switch (subCategory) {\r\n            case 'web development':\r\n                return [\r\n                    { value: 'HTML', label: 'HTML' },\r\n                    { value: 'HTML 5', label: 'HTML 5' },\r\n                    { value: 'CSS 3', label: 'CSS 3' },\r\n                    { value: 'CSS', label: 'CSS' },\r\n                    { value: 'JavaScript', label: 'JavaScript' },\r\n                    { value: 'PHP', label: 'PHP' },\r\n                    { value: '.net', label: '.net' },\r\n                    { value: 'Node JS', label: 'Node JS' },\r\n                    { value: 'React Js', label: 'React Js' },\r\n                    { value: 'Laravel', label: 'Laravel' },\r\n                  ]; \r\n            \r\n            case 'data science':\r\n                return [\r\n                    { value: 'HTML', label: 'HTML' },\r\n                    { value: 'HTML 5', label: 'HTML 5' },\r\n                    { value: 'CSS 3', label: 'CSS 3' },\r\n                    { value: 'CSS', label: 'CSS' },\r\n                    { value: 'JavaScript', label: 'JavaScript' },\r\n                    { value: 'PHP', label: 'PHP' },\r\n                    { value: '.net', label: '.net' },\r\n                    { value: 'Node JS', label: 'Node JS' },\r\n                    { value: 'React Js', label: 'React Js' },\r\n                    { value: 'Laravel', label: 'Laravel' },\r\n                  ]; \r\n            \r\n            case 'Mobile Development':\r\n                return [\r\n                    { value: 'HTML', label: 'HTML' },\r\n                    { value: 'HTML 5', label: 'HTML 5' },\r\n                    { value: 'CSS 3', label: 'CSS 3' },\r\n                    { value: 'CSS', label: 'CSS' },\r\n                    { value: 'JavaScript', label: 'JavaScript' },\r\n                    { value: 'PHP', label: 'PHP' },\r\n                    { value: '.net', label: '.net' },\r\n                    { value: 'Node JS', label: 'Node JS' },\r\n                    { value: 'React Js', label: 'React Js' },\r\n                    { value: 'Laravel', label: 'Laravel' },\r\n                  ]; \r\n            \r\n            case 'network & security':\r\n                return [\r\n                    { value: 'HTML', label: 'HTML' },\r\n                    { value: 'HTML 5', label: 'HTML 5' },\r\n                    { value: 'CSS 3', label: 'CSS 3' },\r\n                    { value: 'CSS', label: 'CSS' },\r\n                    { value: 'JavaScript', label: 'JavaScript' },\r\n                    { value: 'PHP', label: 'PHP' },\r\n                    { value: '.net', label: '.net' },\r\n                    { value: 'Node JS', label: 'Node JS' },\r\n                    { value: 'React Js', label: 'React Js' },\r\n                    { value: 'Laravel', label: 'Laravel' },\r\n                  ]; \r\n            \r\n            case 'hardware':\r\n                return [\r\n                    { value: 'HTML', label: 'HTML' },\r\n                    { value: 'HTML 5', label: 'HTML 5' },\r\n                    { value: 'CSS 3', label: 'CSS 3' },\r\n                    { value: 'CSS', label: 'CSS' },\r\n                    { value: 'JavaScript', label: 'JavaScript' },\r\n                    { value: 'PHP', label: 'PHP' },\r\n                    { value: '.net', label: '.net' },\r\n                    { value: 'Node JS', label: 'Node JS' },\r\n                    { value: 'React Js', label: 'React Js' },\r\n                    { value: 'Laravel', label: 'Laravel' },\r\n                  ]; \r\n            \r\n            case 'operating system':\r\n                return [\r\n                    { value: 'HTML', label: 'HTML' },\r\n                    { value: 'HTML 5', label: 'HTML 5' },\r\n                    { value: 'CSS 3', label: 'CSS 3' },\r\n                    { value: 'CSS', label: 'CSS' },\r\n                    { value: 'JavaScript', label: 'JavaScript' },\r\n                    { value: 'PHP', label: 'PHP' },\r\n                    { value: '.net', label: '.net' },\r\n                    { value: 'Node JS', label: 'Node JS' },\r\n                    { value: 'React Js', label: 'React Js' },\r\n                    { value: 'Laravel', label: 'Laravel' },\r\n                  ]; \r\n            \r\n            case 'digital marketing':\r\n                return [\r\n                    { value: 'HTML', label: 'HTML' },\r\n                    { value: 'HTML 5', label: 'HTML 5' },\r\n                    { value: 'CSS 3', label: 'CSS 3' },\r\n                    { value: 'CSS', label: 'CSS' },\r\n                    { value: 'JavaScript', label: 'JavaScript' },\r\n                    { value: 'PHP', label: 'PHP' },\r\n                    { value: '.net', label: '.net' },\r\n                    { value: 'Node JS', label: 'Node JS' },\r\n                    { value: 'React Js', label: 'React Js' },\r\n                    { value: 'Laravel', label: 'Laravel' },\r\n                  ]; \r\n            \r\n            case 'Facebook Marketing':\r\n                return [\r\n                    { value: 'HTML', label: 'HTML' },\r\n                    { value: 'HTML 5', label: 'HTML 5' },\r\n                    { value: 'CSS 3', label: 'CSS 3' },\r\n                    { value: 'CSS', label: 'CSS' },\r\n                    { value: 'JavaScript', label: 'JavaScript' },\r\n                    { value: 'PHP', label: 'PHP' },\r\n                    { value: '.net', label: '.net' },\r\n                    { value: 'Node JS', label: 'Node JS' },\r\n                    { value: 'React Js', label: 'React Js' },\r\n                    { value: 'Laravel', label: 'Laravel' },\r\n                  ]; \r\n            \r\n            case 'content marketing':\r\n                return [\r\n                    { value: 'HTML', label: 'HTML' },\r\n                    { value: 'HTML 5', label: 'HTML 5' },\r\n                    { value: 'CSS 3', label: 'CSS 3' },\r\n                    { value: 'CSS', label: 'CSS' },\r\n                    { value: 'JavaScript', label: 'JavaScript' },\r\n                    { value: 'PHP', label: 'PHP' },\r\n                    { value: '.net', label: '.net' },\r\n                    { value: 'Node JS', label: 'Node JS' },\r\n                    { value: 'React Js', label: 'React Js' },\r\n                    { value: 'Laravel', label: 'Laravel' },\r\n                  ]; \r\n            \r\n            case '': \r\n                return [ { value: '', label: 'Nothing found !' } ];\r\n        }\r\n    }\r\n    \r\n\r\n    //* ============================== Helper Functions ============================\r\n    //* ============================== Helper Functions ============================\r\n    //* ============================== Helper Functions ============================\r\n    \r\n    function titles () {\r\n        return [\"First\", \"Second\", \"Third\", 'Done']\r\n    }\r\n    \r\n    //* ============================== For Component Functions ============================\r\n    //* ============================== For Component Functions ============================\r\n    //* ============================== For Component Functions ============================\r\n    \r\n    \r\n    const nextStep = () => {\r\n        if (activeStep + 1 < 4) {\r\n            setactiveStep((currentStep) => currentStep + 1)\r\n        }\r\n    }\r\n    const prevStep = () => {\r\n        if (activeStep - 1 !== -1) {\r\n            setactiveStep((currentStep) => currentStep - 1)\r\n        }\r\n    }\r\n\r\n    const handleChange = (newValue, actionMeta) => {\r\n        const value = newValue.value;\r\n        setCategory(value)\r\n        nextStep()\r\n        setcanGoPrev(true)\r\n    };\r\n    const handleChange2 = (newValue, actionMeta) => {\r\n        const value = newValue.value;\r\n        console.log(value)\r\n        setSubCategory(value)\r\n        nextStep()\r\n    };\r\n    const handleChange3 = (newValue, actionMeta) => {\r\n\r\n        if (newValue === null) {\r\n            return setTags([])\r\n        }\r\n        \r\n        if (newValue.length < allowedNumOfTags + 1) {\r\n            const value = newValue?.map(value => value.value).toString();\r\n            setTags(value.split(','))\r\n            // console.log(newValue)\r\n            // nextStep()\r\n        }\r\n        console.log(Tags)\r\n    };\r\n\r\n    const stepperFinished = () => {\r\n\r\n        let obj = {\r\n            category: Category,\r\n            subCategory: SubCategory,\r\n            tags: Tags\r\n        }\r\n        \r\n        nextStep()\r\n        setHideButton(true)\r\n        setDisabled(true)\r\n\r\n        //Sending props to parent\r\n        sendProps(obj)\r\n    } \r\n\r\n\r\n    //* ============================== Component Level Functions ============================\r\n    //! ============================== Component Level Functions ============================\r\n    //* ============================== Component Level Functions ============================\r\n    //! ============================== Component Level Functions ============================\r\n    //* ============================== Component Level Functions ============================\r\n    //! ============================== Component Level Functions ============================\r\n    //* ============================== Component Level Functions ============================\r\n\r\n\r\n\r\n\r\n    //? ============================== Default Statements ============================\r\n    //? ============================== Default Statements ============================\r\n\r\n    // if (activeStep === 3) {\r\n    //     prevButton.display\r\n    // }\r\n    \r\n\r\n    //! ============================== Component return Statement ============================\r\n    //! ============================== Component return Statement ============================\r\n    //! ============================== Component return Statement ============================\r\n    //! ============================== Component return Statement ============================ \r\n    //! ============================== Component return Statement ============================\r\n    //! ============================== Component return Statement ============================\r\n    //! ============================== Component return Statement ============================\r\n    return ( \r\n      <div>\r\n\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={1} style={{position: 'relative'}}>\r\n\r\n            {activeStep > 0 && HideButton === false && canGoPrev === true ? (\r\n                <IconButton size=\"small\" style={{position: 'absolute', top: '14vh'}} onClick={() => prevStep()}>\r\n                    <ArrowUpwardIcon  />\r\n                </IconButton>) : '' }\r\n                \r\n                \r\n            </Grid>\r\n            \r\n            <Grid item xs={11}>\r\n            <Stepper orientation=\"vertical\" activeStep={activeStep}>\r\n\r\n                <Step >\r\n                <StepLabel>{Category !== '' || Category !== undefined ? (<Fragment> <h6 className='d-inline'><strong> Category :</strong></h6> {Category} </Fragment>) : \"Category\"}</StepLabel>\r\n                <StepContent>\r\n                    <Select\r\n                    className=\"basic-single\"\r\n                    classNamePrefix=\"select\"\r\n                    placeholder='Category'\r\n                    // defaultValue={categoryOptions[0]}\r\n                    isClearable={false}\r\n                    isDisabled={false}\r\n                    isLoading={false}\r\n                    isRtl={false}\r\n                    isSearchable={true}\r\n                    name=\"category\"\r\n                    onChange={handleChange}\r\n                    options={categoryOptions}\r\n                    />\r\n                </StepContent>\r\n                </Step>\r\n\r\n                {activeStep > 0 && (\r\n                <Step>\r\n                <StepLabel>{SubCategory && SubCategory !== '' ? (<Fragment> <h6 className='d-inline'><strong> SubCategory :</strong></h6> {SubCategory} </Fragment>) : \"SubCategory\"}</StepLabel>\r\n                <StepContent>\r\n                    <Select\r\n                    className=\"basic-single\"\r\n                    classNamePrefix=\"select\"\r\n                    placeholder='subCategory'\r\n                    // defaultValue={categoryOptions[0]}\r\n                    isClearable={false}\r\n                    isDisabled={false}\r\n                    isLoading={false}\r\n                    isRtl={false}\r\n                    isSearchable={true}\r\n                    name=\"category\"\r\n                    onChange={handleChange2}\r\n                    options={subCategoryOptions(Category)}\r\n                    />\r\n                </StepContent>\r\n                </Step>)}\r\n\r\n                {activeStep > 1 && (\r\n                <Step>\r\n                <StepLabel>{Tags && Tags !== [] ?  (<Fragment> <h6 className='d-inline'><strong> Tags :</strong></h6> {Tags.join(', ')} </Fragment>) : \"Tags\"}</StepLabel>\r\n                <StepContent>\r\n                    <h5 className=\"mb-3\">Only {allowedNumOfTags} items Items are allowed. The Rest will be ignored</h5>\r\n                    <CreatableSelect id=\"tags\"\r\n                    isMulti\r\n                    placeholder=\"Course's tags\"\r\n                    onChange={handleChange3}\r\n                    isDisabled={Disabled}\r\n                    options={tagsOptions(SubCategory)}\r\n                    />\r\n                    <h6 className=\"mt-3\">{`${allowedNumOfTags - Tags.length < 0 ? 0 : allowedNumOfTags - Tags.length} left`}</h6>\r\n                </StepContent>\r\n                </Step>)}\r\n                </Stepper>\r\n\r\n                {activeStep === 2 && HideButton === false && Tags.length === allowedNumOfTags ? (<Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                style={{ width: \"200px\", display: \"inline-block\" }}\r\n                onClick={() => stepperFinished()}\r\n                >Done</Button>) : ''}\r\n            </Grid>\r\n        </Grid>\r\n\r\n\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Category\r\n","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\components\\mainformPart\\DropZone.js",["189"],"import React, { useState } from 'react'\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\nconst DropZone = ({innerText, getFiles, acceptableFiles,  Multi, dropzonePaddingY}) => {\r\n\r\n\r\n    const {acceptedFiles, getRootProps, getInputProps} = useDropzone({\r\n        multiple: Multi ? true : false , \r\n        accept: !acceptableFiles ? '' : acceptableFiles, \r\n        onDrop: files => getFiles(files)\r\n    });\r\n  \r\n    const files = acceptedFiles.map(file => (\r\n      <li key={file.name}>\r\n        {file.path}\r\n      </li>\r\n    ));\r\n\r\n    // if (acceptedFiles.length > 0) {\r\n    //     setFiles(acceptedFiles)\r\n    // }\r\n\r\n    // console.log(Files)\r\n  \r\n    return (\r\n      <section className=\"container\">\r\n        <div {...getRootProps({className: 'dropzone'})} style={{border: '2px dashed black', position: 'relative', padding: `${dropzonePaddingY ? dropzonePaddingY : '70px'} 0px`}}>\r\n          <input {...getInputProps()} />\r\n          <p style={{color: '#25252555', position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}} >{innerText ? innerText : \"Drag 'n' drop some files here, or click to select files\"}</p>\r\n        </div>\r\n        <aside>\r\n          <h4>Files</h4>\r\n          <ul>{files}</ul>\r\n        </aside>\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default DropZone\r\n","C:\\Users\\NAFIZ\\Documents\\GitHub\\course-upload\\client\\src\\utils\\category_listing.js",["190","191"],{"ruleId":"192","severity":1,"message":"193","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":9},{"ruleId":"192","severity":1,"message":"196","line":5,"column":8,"nodeType":"194","messageId":"195","endLine":5,"endColumn":15},{"ruleId":"192","severity":1,"message":"197","line":11,"column":8,"nodeType":"194","messageId":"195","endLine":11,"endColumn":23},{"ruleId":"192","severity":1,"message":"198","line":94,"column":9,"nodeType":"194","messageId":"195","endLine":94,"endColumn":12},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"192","severity":1,"message":"203","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":35},{"ruleId":"204","severity":1,"message":"205","line":17,"column":8,"nodeType":"206","endLine":17,"endColumn":19,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"208","line":22,"column":6,"nodeType":"206","endLine":22,"endColumn":8,"suggestions":"209"},{"ruleId":"192","severity":1,"message":"210","line":24,"column":83,"nodeType":"194","messageId":"195","endLine":24,"endColumn":93},{"ruleId":"192","severity":1,"message":"211","line":24,"column":95,"nodeType":"194","messageId":"195","endLine":24,"endColumn":100},{"ruleId":"212","severity":1,"message":"213","line":117,"column":23,"nodeType":"214","endLine":120,"endColumn":25},{"ruleId":"199","replacedBy":"215"},{"ruleId":"201","replacedBy":"216"},{"ruleId":"204","severity":1,"message":"208","line":16,"column":8,"nodeType":"206","endLine":16,"endColumn":10,"suggestions":"217"},{"ruleId":"192","severity":1,"message":"203","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"199","replacedBy":"218"},{"ruleId":"201","replacedBy":"219"},{"ruleId":"192","severity":1,"message":"220","line":10,"column":83,"nodeType":"194","messageId":"195","endLine":10,"endColumn":95},{"ruleId":"192","severity":1,"message":"221","line":1,"column":116,"nodeType":"194","messageId":"195","endLine":1,"endColumn":135},{"ruleId":"192","severity":1,"message":"222","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":13},{"ruleId":"192","severity":1,"message":"223","line":294,"column":15,"nodeType":"194","messageId":"195","endLine":294,"endColumn":18},{"ruleId":"192","severity":1,"message":"224","line":11,"column":7,"nodeType":"194","messageId":"195","endLine":11,"endColumn":22},{"ruleId":"199","replacedBy":"225"},{"ruleId":"201","replacedBy":"226"},{"ruleId":"204","severity":1,"message":"208","line":19,"column":8,"nodeType":"206","endLine":19,"endColumn":10,"suggestions":"227"},{"ruleId":"192","severity":1,"message":"228","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":18},{"ruleId":"192","severity":1,"message":"229","line":5,"column":8,"nodeType":"194","messageId":"195","endLine":5,"endColumn":17},{"ruleId":"192","severity":1,"message":"230","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"232","line":65,"column":19,"nodeType":"233","messageId":"234","endLine":65,"endColumn":24},{"ruleId":"231","severity":1,"message":"232","line":79,"column":19,"nodeType":"233","messageId":"234","endLine":79,"endColumn":24},{"ruleId":"192","severity":1,"message":"235","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":17,"column":1,"nodeType":"238","endLine":58,"endColumn":2},{"ruleId":"192","severity":1,"message":"239","line":9,"column":23,"nodeType":"194","messageId":"195","endLine":9,"endColumn":30},{"ruleId":"204","severity":1,"message":"240","line":26,"column":8,"nodeType":"206","endLine":26,"endColumn":10,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":10,"column":33,"nodeType":"244","messageId":"245","endLine":10,"endColumn":35},{"ruleId":"204","severity":1,"message":"208","line":13,"column":8,"nodeType":"206","endLine":13,"endColumn":10,"suggestions":"246"},{"ruleId":"192","severity":1,"message":"210","line":15,"column":80,"nodeType":"194","messageId":"195","endLine":15,"endColumn":90},{"ruleId":"192","severity":1,"message":"211","line":15,"column":92,"nodeType":"194","messageId":"195","endLine":15,"endColumn":97},{"ruleId":"212","severity":1,"message":"213","line":109,"column":23,"nodeType":"214","endLine":112,"endColumn":25},{"ruleId":"204","severity":1,"message":"247","line":44,"column":8,"nodeType":"206","endLine":44,"endColumn":33,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":126,"column":15,"nodeType":"251","endLine":126,"endColumn":43},{"ruleId":"192","severity":1,"message":"252","line":20,"column":11,"nodeType":"194","messageId":"195","endLine":20,"endColumn":21},{"ruleId":"253","severity":1,"message":"254","line":44,"column":9,"nodeType":"255","messageId":"256","endLine":65,"endColumn":10},{"ruleId":"253","severity":1,"message":"254","line":70,"column":9,"nodeType":"255","messageId":"256","endLine":199,"endColumn":10},{"ruleId":"192","severity":1,"message":"257","line":207,"column":14,"nodeType":"194","messageId":"195","endLine":207,"endColumn":20},{"ruleId":"192","severity":1,"message":"203","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":9,"column":5,"nodeType":"255","messageId":"256","endLine":30,"endColumn":6},{"ruleId":"253","severity":1,"message":"254","line":34,"column":5,"nodeType":"255","messageId":"256","endLine":152,"endColumn":6},"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","'history' is defined but never used.","'CreatableSelect' is defined but never used.","'url' is assigned a value but never used.","no-native-reassign",["258"],"no-negated-in-lhs",["259"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["260"],"React Hook useEffect has missing dependencies: 'getCourse' and 'id'. Either include them or remove the dependency array. If 'getCourse' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["261"],"'coverImage' is assigned a value but never used.","'level' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["258"],["259"],["262"],["258"],["259"],"'discountPerc' is assigned a value but never used.","'COURSE_FAQ_UPLOADED' is defined but never used.","'axios' is defined but never used.","'res' is assigned a value but never used.","'composeEnhancer' is assigned a value but never used.",["258"],["259"],["263"],"'IconButton' is defined but never used.","'CloseIcon' is defined but never used.","'Fragment' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","'Modal' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'videoId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'courseId' and 'getCourseLessonsByCourseId'. Either include them or remove the dependency array. If 'getCourseLessonsByCourseId' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["264"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["265"],"React Hook useEffect has missing dependencies: 'course' and 'id'. Either include them or remove the dependency array. If 'setformData' needs the current value of 'course', you can also switch to useReducer instead of useState and read 'course' in the reducer.",["266"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'prevButton' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'titles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},{"desc":"267","fix":"269"},{"desc":"267","fix":"270"},{"desc":"267","fix":"271"},{"desc":"272","fix":"273"},{"desc":"267","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [getCourse, id]",{"range":"277","text":"278"},{"range":"279","text":"278"},{"range":"280","text":"278"},{"range":"281","text":"278"},"Update the dependencies array to be: [courseId, getCourseLessonsByCourseId]",{"range":"282","text":"283"},{"range":"284","text":"278"},"Update the dependencies array to be: [course, getCourse, id, updateCourse]",{"range":"285","text":"286"},[535,546],"[getCourse, id]",[552,554],[469,471],[459,461],[841,843],"[courseId, getCourseLessonsByCourseId]",[413,415],[1518,1543],"[course, getCourse, id, updateCourse]"]