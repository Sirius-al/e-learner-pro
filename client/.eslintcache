[{"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\index.js":"1","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\Actions\\actions.js":"2","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\MainFormPart.js":"3","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\Reducers\\allReducers.js":"4","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\courseMaterials.js":"5","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\Actions\\types.js":"6","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\course\\Course.js":"7","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\CourseFaq.js":"8","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\CourseLearn.js":"9","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\Materials.js":"10","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\course\\Lessons.js":"11","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\utils\\backendCall.js":"12","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\App.js":"13","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\CourseLesson.js":"14","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\Reducers\\index.js":"15"},{"size":594,"mtime":1606740392222,"results":"16","hashOfConfig":"17"},{"size":4963,"mtime":1607176246440,"results":"18","hashOfConfig":"17"},{"size":7635,"mtime":1607186820951,"results":"19","hashOfConfig":"17"},{"size":696,"mtime":1607177728571,"results":"20","hashOfConfig":"17"},{"size":2604,"mtime":1607159254846,"results":"21","hashOfConfig":"17"},{"size":458,"mtime":1607176255974,"results":"22","hashOfConfig":"17"},{"size":6038,"mtime":1607249586193,"results":"23","hashOfConfig":"17"},{"size":1420,"mtime":1607167545349,"results":"24","hashOfConfig":"17"},{"size":1717,"mtime":1607176374368,"results":"25","hashOfConfig":"17"},{"size":1394,"mtime":1607168454656,"results":"26","hashOfConfig":"17"},{"size":3645,"mtime":1607185874445,"results":"27","hashOfConfig":"17"},{"size":121,"mtime":1607250415449,"results":"28","hashOfConfig":"17"},{"size":1397,"mtime":1607159498425,"results":"29","hashOfConfig":"17"},{"size":5073,"mtime":1607211696402,"results":"30","hashOfConfig":"17"},{"size":146,"mtime":1607024318002,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dqhp84",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\index.js",[],"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\Actions\\actions.js",[],"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\MainFormPart.js",["65","66","67","68"],"import React, { Fragment, useState } from 'react'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Materials from '../components/Materials';\r\n\r\nimport { submitCourseBasics, uploadfile } from '../Actions/actions'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst MainFormPart = ({ submitCourseBasics, course, uploadfile, files }) => {\r\n\r\n  const [title, settitle] = useState('')\r\n  const [catagory, setcatagory] = useState('')\r\n  const [description, setdescription] = useState('')\r\n  const [duration, setduration] = useState('')\r\n  const [teacher, setteacher] = useState('')\r\n  const [coverImage, setcoverImage] = useState('')\r\n  const [level, setlevel] = useState('')\r\n  const [requirements, setrequirements] = useState('')\r\n  const [price, setprice] = useState(0)\r\n  const [discountPerc, setdiscountPerc] = useState(0)\r\n\r\n  // const [ inputtedData, setinputtedData] = useState({\r\n  //   title: title,\r\n  //   catagory: catagory,\r\n  //   description: description,\r\n  //   duration: duration,\r\n  //   teacher: teacher,\r\n  //   coverImage: coverImage,\r\n  //   level: level,\r\n  //   requirements: requirements,\r\n  //   price: price,\r\n  //   discountPerc: discountPerc\r\n  // })\r\n  \r\n  \r\n  \r\n  const [ check, setCheck] = useState(false)\r\n  \r\n  const submitBasicForm = (e) => {\r\n    e.preventDefault()\r\n    const data = {\r\n      title: title,\r\n      catagory: catagory,\r\n      description: description,\r\n      duration: duration,\r\n      teacher: teacher,\r\n      coverImage: files.filepath || coverImage,\r\n      level: level,\r\n      requirements: requirements,\r\n      price: price,\r\n      discountPerc: discountPerc\r\n    }\r\n    submitCourseBasics(data)\r\n    // console.log(data)\r\n  }\r\n  \r\n  \r\n  // console.log(courseMaterial )\r\n\r\n  const SelectOptions = [\r\n    { value: 'HTML', label: 'HTML' },\r\n    { value: 'HTML 5', label: 'HTML 5' },\r\n    { value: 'CSS 3', label: 'CSS 3' },\r\n    { value: 'CSS', label: 'CSS' },\r\n    { value: 'JavaScript', label: 'JavaScript' },\r\n    { value: 'PHP', label: 'PHP' },\r\n    { value: '.net', label: '.net' },\r\n    { value: 'Node JS', label: 'Node JS' },\r\n    { value: 'React Js', label: 'React Js' },\r\n    { value: 'Laravel', label: 'Laravel' },\r\n  ]\r\n  const LevelOptions = [\r\n    { value: 'Beginners', label: 'Beginners' },\r\n    { value: 'Intermediate', label: 'Intermediate' },\r\n    { value: 'Advanced', label: 'Advanced' }\r\n  ]\r\n\r\n\r\n  const handleChange = (newValue, actionMeta) => {\r\n    const value = newValue?.map(value => value.value).toString();\r\n    setcatagory(value)\r\n  };\r\n  const handleChange2 = (newValue, actionMeta) => {\r\n    setlevel(newValue.value);\r\n  };\r\n\r\n  const onCoverImageUpload = (e) => {\r\n    setcoverImage(e.target.files[0].name)\r\n\r\n    const formdata = new FormData()\r\n    formdata.append('file', e.target.files[0])\r\n    uploadfile(formdata)\r\n  };\r\n\r\n    return (\r\n        <Fragment>\r\n            <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"inputEmail4\">Course Title</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Put your course's Title\" name='title' onChange={e => settitle(e.target.value)} />\r\n          </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-3\">\r\n            <label htmlFor=\"inputAddress\">Teacher</label>\r\n            <input type=\"text\" className=\"form-control\" name='teacher'  id=\"inputAddress\" placeholder=\"Ex: Nafiz Al din\" onChange={e => setteacher(e.target.value)} />\r\n          </div>\r\n          <div className=\"form-group col-md-3\" style={{marginTop: '30px', textAlign: 'center'}}>\r\n            <input\r\n                accept=\"image/*\"\r\n                id=\"contained-button-file\"\r\n                type=\"file\"\r\n                style={{display: 'none'}}\r\n                name=\"coverImage\"\r\n                onChange={e => onCoverImageUpload(e)}\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                  <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                      Upload Cover Image\r\n                  </Button>\r\n              </label>\r\n          </div>\r\n          <div className=\"form-group col-md-5\" style={{marginTop: '30px'}}>\r\n            <p> <strong>{coverImage === '' ? \"Select a Cover Image For your Course\" : coverImage}</strong> </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-5\">\r\n            <label htmlFor=\"inputCity\">Course Catagory</label>\r\n            <CreatableSelect id=\"inputCity\"\r\n              isClearable isMulti\r\n              placeholder=\"Course Catagories\"\r\n              onChange={handleChange}\r\n              options={SelectOptions}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-2\">\r\n            <label htmlFor=\"inputState\">course Price</label>\r\n            <input type=\"number\" name=\"price\"  className=\"form-control\" id=\"inputState\" placeholder=\"course's Price\" onChange={e => setprice(e.target.value)} />\r\n          </div>\r\n          <div className=\"form-group col-md-2\">\r\n            <label htmlFor=\"inputZip\">course duration</label>\r\n            <input type=\"text\" name=\"duration\"  className=\"form-control\" id=\"inputZip\" placeholder=\"3 hrs - 45 mins\" onChange={e => setduration(e.target.value)} />\r\n          </div>\r\n\r\n          <div className=\"form-group col-md-3\">\r\n            <label htmlFor=\"level\">Level of expertise</label>\r\n            <Select id=\"level\"\r\n              // defaultValue={colourOptions[2]}\r\n              placeholder=\"Course's Catagory\"\r\n              options={LevelOptions}\r\n              onChange={handleChange2}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"Descriptioninput\">Course Description</label>\r\n            <textarea type=\"text\" className=\"form-control\" name='description'  row='10' id=\"Descriptioninput\" placeholder=\"Ex: Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur\" onChange={e => setdescription(e.target.value)} />\r\n         </div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"Descriptioninput\">Course Requirements</label>\r\n            <textarea type=\"text\" className=\"form-control\" name='description'  row='3' id=\"Descriptioninput\" placeholder=\"Put course Requirements seperated by commas,\" onChange={e => setrequirements(e.target.value)} />\r\n         </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"inputZip\">Course Discount</label>\r\n            <input type=\"number\" name='discountPerc' className=\"form-control\" id=\"inputZip\" placeholder=\"will be calculated in percentage\" onChange={e => setdiscountPerc(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-12\">\r\n\r\n          <button className=\"btn btn-primary mb-4\" onClick={e=> submitBasicForm(e)}>submit this form ^</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    course: state.datas.course,\r\n    files: state.datas.data\r\n  })\r\n\r\nexport default connect(mapStateToProps, { submitCourseBasics, uploadfile })(MainFormPart)\r\n","C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\Reducers\\allReducers.js",["69"],"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\courseMaterials.js",["70","71"],"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\Actions\\types.js",[],"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\course\\Course.js",["72","73","74","75","76","77"],"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\CourseFaq.js",["78"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport { submitCoursefaq } from '../Actions/actions'\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst CourseFaq = ({ id, submitCoursefaq }) => {\r\n\r\n    const [value, setvalue] = useState({question: '', answer: ''})\r\n    \r\n    const inputtedData = e => {\r\n        setvalue({...value, [e.target.name]: e.target.value})\r\n    }\r\n    \r\n    const sendData = () => {\r\n        console.log(value)\r\n        submitCoursefaq(id, [value])\r\n        setvalue({question: '', answer: ''})\r\n    }\r\n   \r\n  return (\r\n    <div>\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-header\">Course FAQ </div>\r\n        <div className=\"card-body\">\r\n            <input type=\"text\" name=\"question\" className=\"form-control\" id=\"inputZip\" placeholder=\"Question \" value={value.question} onChange={e => inputtedData(e)}\r\n            />\r\n            <br/>\r\n            <textarea type=\"text\" name=\"answer\" className=\"form-control\" row={3} id=\"inputZip\" placeholder=\"Answer\" value={value.answer} onChange={e => inputtedData(e)}\r\n            />\r\n            \r\n        </div>\r\n            <Button variant=\"contained\" onClick={() => sendData()} color=\"secondary\" component=\"span\">\r\n                submit course Faq\r\n            </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { submitCoursefaq })(CourseFaq);\r\n",["79","80"],"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\CourseLearn.js",[],"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\Materials.js",["81","82","83","84"],"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\course\\Lessons.js",[],"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\utils\\backendCall.js",[],"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\App.js",["85"],"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\components\\CourseLesson.js",["86","87","88","89"],"C:\\Users\\NAFIZ\\Desktop\\course uploader\\client\\src\\Reducers\\index.js",[],{"ruleId":"90","severity":1,"message":"91","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":17},{"ruleId":"90","severity":1,"message":"94","line":11,"column":10,"nodeType":"92","messageId":"93","endLine":11,"endColumn":14},{"ruleId":"90","severity":1,"message":"95","line":42,"column":11,"nodeType":"92","messageId":"93","endLine":42,"endColumn":16},{"ruleId":"90","severity":1,"message":"96","line":42,"column":18,"nodeType":"92","messageId":"93","endLine":42,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":9,"column":1,"nodeType":"99","endLine":24,"endColumn":2},{"ruleId":"90","severity":1,"message":"100","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"101","line":11,"column":12,"nodeType":"92","messageId":"93","endLine":11,"endColumn":16},{"ruleId":"90","severity":1,"message":"102","line":9,"column":10,"nodeType":"92","messageId":"93","endLine":9,"endColumn":15},{"ruleId":"103","severity":1,"message":"104","line":21,"column":6,"nodeType":"105","endLine":21,"endColumn":8,"suggestions":"106"},{"ruleId":"90","severity":1,"message":"107","line":23,"column":78,"nodeType":"92","messageId":"93","endLine":23,"endColumn":88},{"ruleId":"90","severity":1,"message":"108","line":23,"column":90,"nodeType":"92","messageId":"93","endLine":23,"endColumn":95},{"ruleId":"90","severity":1,"message":"109","line":23,"column":138,"nodeType":"92","messageId":"93","endLine":23,"endColumn":141},{"ruleId":"110","severity":1,"message":"111","line":113,"column":23,"nodeType":"112","endLine":116,"endColumn":25},{"ruleId":"90","severity":1,"message":"100","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"90","severity":1,"message":"117","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"118","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"119","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":21},{"ruleId":"90","severity":1,"message":"120","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":12},{"ruleId":"90","severity":1,"message":"121","line":24,"column":9,"nodeType":"92","messageId":"93","endLine":24,"endColumn":13},{"ruleId":"90","severity":1,"message":"122","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":13},{"ruleId":"90","severity":1,"message":"123","line":4,"column":15,"nodeType":"92","messageId":"93","endLine":4,"endColumn":19},{"ruleId":"90","severity":1,"message":"124","line":14,"column":12,"nodeType":"92","messageId":"93","endLine":14,"endColumn":15},{"ruleId":"90","severity":1,"message":"125","line":16,"column":13,"nodeType":"92","messageId":"93","endLine":16,"endColumn":28},"no-unused-vars","'Materials' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'check' is assigned a value but never used.","'setCheck' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useEffect' is defined but never used.","'file' is assigned a value but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCourse' and 'id'. Either include them or remove the dependency array. If 'getCourse' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["126"],"'coverImage' is assigned a value but never used.","'level' is assigned a value but never used.","'faq' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'useState' is defined but never used.","'Button' is defined but never used.","'AddCircleIcon' is defined but never used.","'v4' is defined but never used.","'card' is assigned a value but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'tab' is assigned a value but never used.","'handleTabChange' is assigned a value but never used.",{"desc":"129","fix":"130"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getCourse, id]",{"range":"131","text":"132"},[533,535],"[getCourse, id]"]